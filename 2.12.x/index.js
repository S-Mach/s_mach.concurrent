Index.PACKAGES = {"s_mach.concurrent.util" : [{"name" : "s_mach.concurrent.util.AtomicFSM", "shortDescription" : "A class for a finite state machine whose state may be transitionedatomically by any number of concurrent threads.", "members_class" : [{"label" : "fold", "tail" : "(transition: PartialFunction[S, (S, X)], onTransition: PartialFunction[(S, S), Unit]): X", "member" : "s_mach.concurrent.util.AtomicFSM.fold", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#fold[X](transition:PartialFunction[S,(S,X)],onTransition:PartialFunction[(S,S),Unit]):X", "kind" : "def"}, {"label" : "apply", "tail" : "(transition: PartialFunction[S, S], onTransition: PartialFunction[(S, S), Unit]): S", "member" : "s_mach.concurrent.util.AtomicFSM.apply", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#apply(transition:PartialFunction[S,S],onTransition:PartialFunction[(S,S),Unit]):S", "kind" : "def"}, {"member" : "s_mach.concurrent.util.AtomicFSM#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "java.util.concurrent.atomic.AtomicReference.toString", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#toString():String", "kind" : "def"}, {"label" : "accumulateAndGet", "tail" : "(arg0: S, arg1: BinaryOperator[S]): S", "member" : "java.util.concurrent.atomic.AtomicReference.accumulateAndGet", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#accumulateAndGet(x$1:V,x$2:java.util.function.BinaryOperator[V]):V", "kind" : "final def"}, {"label" : "getAndAccumulate", "tail" : "(arg0: S, arg1: BinaryOperator[S]): S", "member" : "java.util.concurrent.atomic.AtomicReference.getAndAccumulate", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#getAndAccumulate(x$1:V,x$2:java.util.function.BinaryOperator[V]):V", "kind" : "final def"}, {"label" : "updateAndGet", "tail" : "(arg0: UnaryOperator[S]): S", "member" : "java.util.concurrent.atomic.AtomicReference.updateAndGet", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#updateAndGet(x$1:java.util.function.UnaryOperator[V]):V", "kind" : "final def"}, {"label" : "getAndUpdate", "tail" : "(arg0: UnaryOperator[S]): S", "member" : "java.util.concurrent.atomic.AtomicReference.getAndUpdate", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#getAndUpdate(x$1:java.util.function.UnaryOperator[V]):V", "kind" : "final def"}, {"label" : "getAndSet", "tail" : "(arg0: S): S", "member" : "java.util.concurrent.atomic.AtomicReference.getAndSet", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#getAndSet(x$1:V):V", "kind" : "final def"}, {"label" : "weakCompareAndSet", "tail" : "(arg0: S, arg1: S): Boolean", "member" : "java.util.concurrent.atomic.AtomicReference.weakCompareAndSet", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#weakCompareAndSet(x$1:V,x$2:V):Boolean", "kind" : "final def"}, {"label" : "compareAndSet", "tail" : "(arg0: S, arg1: S): Boolean", "member" : "java.util.concurrent.atomic.AtomicReference.compareAndSet", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#compareAndSet(x$1:V,x$2:V):Boolean", "kind" : "final def"}, {"label" : "lazySet", "tail" : "(arg0: S): Unit", "member" : "java.util.concurrent.atomic.AtomicReference.lazySet", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#lazySet(x$1:V):Unit", "kind" : "final def"}, {"label" : "set", "tail" : "(arg0: S): Unit", "member" : "java.util.concurrent.atomic.AtomicReference.set", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#set(x$1:V):Unit", "kind" : "final def"}, {"label" : "get", "tail" : "(): S", "member" : "java.util.concurrent.atomic.AtomicReference.get", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#get():V", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/AtomicFSM.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/util\/AtomicFSM.html", "kind" : "class"}, {"name" : "s_mach.concurrent.util.Barrier", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Barrier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Barrier.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Barrier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Barrier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Barrier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Barrier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Barrier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Barrier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Barrier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Barrier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Barrier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Barrier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Barrier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Barrier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Barrier.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Barrier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Barrier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Barrier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Barrier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "spinUntilSet", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.Barrier.spinUntilSet", "link" : "s_mach\/concurrent\/util\/Barrier.html#spinUntilSet():Unit", "kind" : "abstract def"}, {"label" : "happensBefore", "tail" : "(next: ⇒ Future[A])(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.util.Barrier.happensBefore", "link" : "s_mach\/concurrent\/util\/Barrier.html#happensBefore[A](next:=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "abstract def"}, {"label" : "future", "tail" : "(): Future[Unit]", "member" : "s_mach.concurrent.util.Barrier.future", "link" : "s_mach\/concurrent\/util\/Barrier.html#future:scala.concurrent.Future[Unit]", "kind" : "abstract def"}, {"label" : "onSet", "tail" : "(f: ⇒ A)(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.util.Barrier.onSet", "link" : "s_mach\/concurrent\/util\/Barrier.html#onSet[A](f:=>A)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "abstract def"}, {"label" : "isSet", "tail" : "(): Boolean", "member" : "s_mach.concurrent.util.Barrier.isSet", "link" : "s_mach\/concurrent\/util\/Barrier.html#isSet:Boolean", "kind" : "abstract def"}], "shortDescription" : "A trait for a barrier that can be used by callers to synchronize on an eventby waiting for the barrier to be set.", "object" : "s_mach\/concurrent\/util\/Barrier$.html", "members_object" : [{"label" : "set", "tail" : ": Barrier", "member" : "s_mach.concurrent.util.Barrier.set", "link" : "s_mach\/concurrent\/util\/Barrier$.html#set:s_mach.concurrent.util.Barrier", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Barrier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Barrier$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Barrier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Barrier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Barrier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Barrier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Barrier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Barrier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Barrier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Barrier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Barrier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Barrier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Barrier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Barrier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Barrier$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Barrier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Barrier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Barrier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Barrier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/util\/Barrier.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.ConcurrentTestContext", "members_trait" : [{"label" : "waitForActiveExecutionCount", "tail" : "(_activeRunnableCount: Int): Unit", "member" : "s_mach.concurrent.util.ConcurrentTestContext.waitForActiveExecutionCount", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#waitForActiveExecutionCount(_activeRunnableCount:Int):Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "delayError_ns", "tail" : "(): Long", "member" : "s_mach.concurrent.util.ConcurrentTestContext.delayError_ns", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#delayError_ns:Long", "kind" : "abstract def"}, {"label" : "delay", "tail" : "(delay_ns: Long): Unit", "member" : "s_mach.concurrent.util.ConcurrentTestContext.delay", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#delay(delay_ns:Long):Unit", "kind" : "abstract def"}, {"label" : "sched", "tail" : "(): SerializationSchedule[String]", "member" : "s_mach.concurrent.util.ConcurrentTestContext.sched", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#sched:s_mach.concurrent.util.SerializationSchedule[String]", "kind" : "implicit abstract def"}, {"label" : "activeExecutionCount", "tail" : "(): Int", "member" : "s_mach.concurrent.util.ConcurrentTestContext.activeExecutionCount", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#activeExecutionCount:Int", "kind" : "abstract def"}, {"label" : "reportFailure", "tail" : "(cause: Throwable): Unit", "member" : "s_mach.concurrent.ScheduledExecutionContext.reportFailure", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#reportFailure(cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: FiniteDuration, period: FiniteDuration, paused: Boolean)(task: () ⇒ U): PeriodicTask", "member" : "s_mach.concurrent.ScheduledExecutionContext.scheduleAtFixedRate", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#scheduleAtFixedRate[U](initialDelay:scala.concurrent.duration.FiniteDuration,period:scala.concurrent.duration.FiniteDuration,paused:Boolean)(task:()=>U):s_mach.concurrent.PeriodicTask", "kind" : "abstract def"}, {"label" : "scheduleCancellable", "tail" : "(delay: FiniteDuration, fallback: ⇒ A)(f: ⇒ A): CancellableDelayedFuture[A]", "member" : "s_mach.concurrent.ScheduledExecutionContext.scheduleCancellable", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#scheduleCancellable[A](delay:scala.concurrent.duration.FiniteDuration,fallback:=>A)(f:=>A):s_mach.concurrent.CancellableDelayedFuture[A]", "kind" : "abstract def"}, {"label" : "schedule", "tail" : "(delay: FiniteDuration)(f: ⇒ A): DelayedFuture[A]", "member" : "s_mach.concurrent.ScheduledExecutionContext.schedule", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#schedule[A](delay:scala.concurrent.duration.FiniteDuration)(f:=>A):s_mach.concurrent.DelayedFuture[A]", "kind" : "abstract def"}, {"label" : "execute", "tail" : "(runnable: Runnable): Unit", "member" : "scala.concurrent.ExecutionContext.execute", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html#execute(runnable:Runnable):Unit", "kind" : "abstract def"}], "shortDescription" : "A context for testing concurrent code that provides:1) an ExecutionContext that keeps track of the number of active and completedRunnables2) a Timer for tracking elapsed duration since start of test3) a SerializationSchedule for detecting order of execution of events4) a precision delay function that accumulates any delay error", "object" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html", "members_object" : [{"label" : "apply", "tail" : "()(ec: ExecutionContext, sec: ScheduledExecutionContext): ConcurrentTestContext", "member" : "s_mach.concurrent.util.ConcurrentTestContext.apply", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#apply()(implicitec:scala.concurrent.ExecutionContext,implicitsec:s_mach.concurrent.ScheduledExecutionContext):s_mach.concurrent.util.ConcurrentTestContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/ConcurrentTestContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/util\/ConcurrentTestContext.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.DelegatedFuture", "members_trait" : [{"label" : "transformWith", "tail" : "(f: (Try[A]) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "s_mach.concurrent.util.DelegatedFuture.transformWith", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#transformWith[S](f:scala.util.Try[A]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Try[A]) ⇒ Try[S])(executor: ExecutionContext): Future[S]", "member" : "s_mach.concurrent.util.DelegatedFuture.transform", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#transform[S](f:scala.util.Try[A]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "ready", "tail" : "(atMost: Duration)(permit: CanAwait): DelegatedFuture.this.type", "member" : "s_mach.concurrent.util.DelegatedFuture.ready", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):DelegatedFuture.this.type", "kind" : "final def"}, {"label" : "result", "tail" : "(atMost: Duration)(permit: CanAwait): A", "member" : "s_mach.concurrent.util.DelegatedFuture.result", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):A", "kind" : "final def"}, {"label" : "value", "tail" : "(): Option[Try[A]]", "member" : "s_mach.concurrent.util.DelegatedFuture.value", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#value:Option[scala.util.Try[A]]", "kind" : "final def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "s_mach.concurrent.util.DelegatedFuture.isCompleted", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#isCompleted:Boolean", "kind" : "final def"}, {"label" : "onComplete", "tail" : "(f: (Try[A]) ⇒ U)(executor: ExecutionContext): Unit", "member" : "s_mach.concurrent.util.DelegatedFuture.onComplete", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#onComplete[U](f:scala.util.Try[A]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "final def"}, {"label" : "andThen", "tail" : "(pf: PartialFunction[Try[A], U])(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.andThen", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): Future[S]", "member" : "scala.concurrent.Future.mapTo", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): Future[U]", "member" : "scala.concurrent.Future.fallbackTo", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (A, U) ⇒ R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): Future[(A, U)]", "member" : "scala.concurrent.Future.zip", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#zip[U](that:scala.concurrent.Future[U]):scala.concurrent.Future[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recoverWith", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recover", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.collect", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.withFilter", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.filter", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#flatten[S](implicitev:<:<[T,scala.concurrent.Future[S]]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.flatMap", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ S)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.map", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (A) ⇒ S, f: (Throwable) ⇒ Throwable)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "failed", "tail" : "(): Future[Throwable]", "member" : "scala.concurrent.Future.failed", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#failed:scala.concurrent.Future[Throwable]", "kind" : "def"}, {"label" : "onFailure", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onFailure", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#onFailure[U](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(pf: PartialFunction[A, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onSuccess", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#onSuccess[U](pf:PartialFunction[T,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "delegate", "tail" : "(): Future[A]", "member" : "s_mach.concurrent.util.DelegatedFuture.delegate", "link" : "s_mach\/concurrent\/util\/DelegatedFuture.html#delegate:scala.concurrent.Future[A]", "kind" : "abstract def"}], "shortDescription" : "A base trait for a future that delegates its implementation to anotherdelegate future", "trait" : "s_mach\/concurrent\/util\/DelegatedFuture.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.Latch", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Latch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Latch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Latch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Latch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Latch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Latch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Latch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Latch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Latch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Latch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Latch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Latch.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Latch.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Latch.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Latch.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Latch.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Latch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Latch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Latch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "trySet", "tail" : "(): Boolean", "member" : "s_mach.concurrent.util.Latch.trySet", "link" : "s_mach\/concurrent\/util\/Latch.html#trySet():Boolean", "kind" : "abstract def"}, {"label" : "set", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.Latch.set", "link" : "s_mach\/concurrent\/util\/Latch.html#set():Unit", "kind" : "abstract def"}, {"label" : "spinUntilSet", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.Barrier.spinUntilSet", "link" : "s_mach\/concurrent\/util\/Latch.html#spinUntilSet():Unit", "kind" : "abstract def"}, {"label" : "happensBefore", "tail" : "(next: ⇒ Future[A])(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.util.Barrier.happensBefore", "link" : "s_mach\/concurrent\/util\/Latch.html#happensBefore[A](next:=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "abstract def"}, {"label" : "future", "tail" : "(): Future[Unit]", "member" : "s_mach.concurrent.util.Barrier.future", "link" : "s_mach\/concurrent\/util\/Latch.html#future:scala.concurrent.Future[Unit]", "kind" : "abstract def"}, {"label" : "onSet", "tail" : "(f: ⇒ A)(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.util.Barrier.onSet", "link" : "s_mach\/concurrent\/util\/Latch.html#onSet[A](f:=>A)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "abstract def"}, {"label" : "isSet", "tail" : "(): Boolean", "member" : "s_mach.concurrent.util.Barrier.isSet", "link" : "s_mach\/concurrent\/util\/Latch.html#isSet:Boolean", "kind" : "abstract def"}], "shortDescription" : "A trait for a latch that can be set once to synchronize events that arewaiting on the barrier.", "object" : "s_mach\/concurrent\/util\/Latch$.html", "members_object" : [{"label" : "apply", "tail" : "(failMessage: String): Latch", "member" : "s_mach.concurrent.util.Latch.apply", "link" : "s_mach\/concurrent\/util\/Latch$.html#apply(failMessage:String):s_mach.concurrent.util.Latch", "kind" : "def"}, {"label" : "defaultFailMessage", "tail" : ": String", "member" : "s_mach.concurrent.util.Latch.defaultFailMessage", "link" : "s_mach\/concurrent\/util\/Latch$.html#defaultFailMessage:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Latch$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Latch$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Latch$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Latch$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Latch$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Latch$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Latch$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Latch$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Latch$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Latch$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Latch$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Latch$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Latch$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Latch$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Latch$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Latch$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Latch$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Latch$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Latch$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/util\/Latch.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.Lock", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Lock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Lock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Lock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Lock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Lock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Lock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Lock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Lock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Lock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Lock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Lock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Lock.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Lock.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Lock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Lock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Lock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Lock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Lock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Lock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "waitQueueLength", "tail" : "(): Int", "member" : "s_mach.concurrent.util.Lock.waitQueueLength", "link" : "s_mach\/concurrent\/util\/Lock.html#waitQueueLength:Int", "kind" : "abstract def"}, {"label" : "isUnlocked", "tail" : "(): Boolean", "member" : "s_mach.concurrent.util.Lock.isUnlocked", "link" : "s_mach\/concurrent\/util\/Lock.html#isUnlocked:Boolean", "kind" : "abstract def"}, {"label" : "lock", "tail" : "(task: ⇒ Future[X])(ec: ExecutionContext): DeferredFuture[X]", "member" : "s_mach.concurrent.util.Lock.lock", "link" : "s_mach\/concurrent\/util\/Lock.html#lock[X](task:=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[X]", "kind" : "abstract def"}], "shortDescription" : "A trait for a non-blocking lock that ensures a synchronous executionschedule for all callers.", "object" : "s_mach\/concurrent\/util\/Lock$.html", "members_object" : [{"label" : "apply", "tail" : "(): Lock", "member" : "s_mach.concurrent.util.Lock.apply", "link" : "s_mach\/concurrent\/util\/Lock$.html#apply():s_mach.concurrent.util.Lock", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Lock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Lock$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Lock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Lock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Lock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Lock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Lock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Lock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Lock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Lock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Lock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Lock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Lock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Lock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Lock$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Lock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Lock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Lock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Lock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/util\/Lock.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.PeriodicProgressReporter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportInterval", "tail" : "(): FiniteDuration", "member" : "s_mach.concurrent.util.PeriodicProgressReporter.reportInterval", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#reportInterval:scala.concurrent.duration.FiniteDuration", "kind" : "abstract def"}, {"label" : "onCompleteStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onCompleteStep", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#onCompleteStep(sequenceNumber:Int):Unit", "kind" : "abstract def"}, {"label" : "onStartStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onStartStep", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#onStartStep(sequenceNumber:Int):Unit", "kind" : "abstract def"}, {"label" : "onCompleteTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onCompleteTask", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#onCompleteTask():Unit", "kind" : "abstract def"}, {"label" : "onStartTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onStartTask", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html#onStartTask():Unit", "kind" : "abstract def"}], "shortDescription" : "A trait for a progress reporter that reports progress only at the specifiedreport interval", "object" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html", "members_object" : [{"label" : "apply", "tail" : "(optTotal: Option[Int], reportInterval: FiniteDuration, report: (Progress) ⇒ Unit)(executionContext: ExecutionContext, scheduledExecutionContext: ScheduledExecutionContext): PeriodicProgressReporter", "member" : "s_mach.concurrent.util.PeriodicProgressReporter.apply", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#apply(optTotal:Option[Int],reportInterval:scala.concurrent.duration.FiniteDuration,report:s_mach.concurrent.util.Progress=>Unit)(implicitexecutionContext:scala.concurrent.ExecutionContext,implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):s_mach.concurrent.util.PeriodicProgressReporter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/PeriodicProgressReporter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/util\/PeriodicProgressReporter.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.Progress", "shortDescription" : "A case class to report progress in a computation", "members_case class" : [{"member" : "s_mach.concurrent.util.Progress#<init>", "error" : "unsupported entity"}, {"label" : "startTime_ns", "tail" : ": Long", "member" : "s_mach.concurrent.util.Progress.startTime_ns", "link" : "s_mach\/concurrent\/util\/Progress.html#startTime_ns:Long", "kind" : "val"}, {"label" : "optTotal", "tail" : ": Option[Int]", "member" : "s_mach.concurrent.util.Progress.optTotal", "link" : "s_mach\/concurrent\/util\/Progress.html#optTotal:Option[Int]", "kind" : "val"}, {"label" : "completed", "tail" : ": Int", "member" : "s_mach.concurrent.util.Progress.completed", "link" : "s_mach\/concurrent\/util\/Progress.html#completed:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Progress.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Progress.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Progress.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Progress.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Progress.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Progress.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Progress.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Progress.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Progress.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Progress.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Progress.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Progress.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Progress.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Progress.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Progress.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Progress.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/util\/Progress.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.util.RetryDecider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/RetryDecider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "shouldRetry", "tail" : "(sequenceNumber: TaskStepId, failure: Throwable): Future[Boolean]", "member" : "s_mach.concurrent.util.RetryDecider.shouldRetry", "link" : "s_mach\/concurrent\/util\/RetryDecider.html#shouldRetry(sequenceNumber:s_mach.concurrent.impl.TaskStepId,failure:Throwable):scala.concurrent.Future[Boolean]", "kind" : "abstract def"}], "shortDescription" : "A trait to decide whether to retry a failure in a task.", "trait" : "s_mach\/concurrent\/util\/RetryDecider.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.Semaphore", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Semaphore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Semaphore.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Semaphore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Semaphore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Semaphore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Semaphore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Semaphore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Semaphore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Semaphore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Semaphore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Semaphore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Semaphore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Semaphore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Semaphore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Semaphore.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Semaphore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Semaphore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Semaphore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Semaphore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "waitQueueLength", "tail" : "(): Int", "member" : "s_mach.concurrent.util.Semaphore.waitQueueLength", "link" : "s_mach\/concurrent\/util\/Semaphore.html#waitQueueLength:Int", "kind" : "abstract def"}, {"label" : "availablePermits", "tail" : "(): Int", "member" : "s_mach.concurrent.util.Semaphore.availablePermits", "link" : "s_mach\/concurrent\/util\/Semaphore.html#availablePermits:Int", "kind" : "abstract def"}, {"label" : "maxAvailablePermits", "tail" : "(): Int", "member" : "s_mach.concurrent.util.Semaphore.maxAvailablePermits", "link" : "s_mach\/concurrent\/util\/Semaphore.html#maxAvailablePermits:Int", "kind" : "abstract def"}, {"label" : "acquire", "tail" : "(permitCount: Int)(task: ⇒ Future[X])(ec: ExecutionContext): DeferredFuture[X]", "member" : "s_mach.concurrent.util.Semaphore.acquire", "link" : "s_mach\/concurrent\/util\/Semaphore.html#acquire[X](permitCount:Int)(task:=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[X]", "kind" : "abstract def"}], "shortDescription" : "A trait for a non-blocking semaphore that ensures limiting concurrentexecution to tasks that have been granted the requested number of permitsfrom a limited pool of permits.", "object" : "s_mach\/concurrent\/util\/Semaphore$.html", "members_object" : [{"label" : "apply", "tail" : "(permitCount: Int): Semaphore", "member" : "s_mach.concurrent.util.Semaphore.apply", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#apply(permitCount:Int):s_mach.concurrent.util.Semaphore", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Semaphore$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Semaphore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/util\/Semaphore.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.Sequencer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Sequencer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Sequencer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Sequencer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Sequencer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Sequencer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Sequencer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Sequencer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Sequencer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Sequencer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Sequencer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Sequencer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Sequencer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Sequencer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Sequencer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Sequencer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Sequencer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Sequencer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Sequencer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Sequencer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "when", "tail" : "(sequenceNumber: Int)(task: ⇒ Future[X])(ec: ExecutionContext): DeferredFuture[X]", "member" : "s_mach.concurrent.util.Sequencer.when", "link" : "s_mach\/concurrent\/util\/Sequencer.html#when[X](sequenceNumber:Int)(task:=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[X]", "kind" : "abstract def"}, {"label" : "next", "tail" : "(): Int", "member" : "s_mach.concurrent.util.Sequencer.next", "link" : "s_mach\/concurrent\/util\/Sequencer.html#next:Int", "kind" : "abstract def"}], "shortDescription" : "A trait used to guarantee a series of unordered tasks occur sequentially.", "object" : "s_mach\/concurrent\/util\/Sequencer$.html", "members_object" : [{"label" : "apply", "tail" : "(next: Int): Sequencer", "member" : "s_mach.concurrent.util.Sequencer.apply", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#apply(next:Int):s_mach.concurrent.util.Sequencer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Sequencer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Sequencer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/util\/Sequencer.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.SerializationSchedule", "shortDescription" : "", "object" : "s_mach\/concurrent\/util\/SerializationSchedule$.html", "members_class" : [{"label" : "happensDuring", "tail" : "(id1: ID, id2: ID): Boolean", "member" : "s_mach.concurrent.util.SerializationSchedule.happensDuring", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#happensDuring(id1:ID,id2:ID):Boolean", "kind" : "def"}, {"label" : "happensBefore", "tail" : "(id1: ID, id2: ID): Boolean", "member" : "s_mach.concurrent.util.SerializationSchedule.happensBefore", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#happensBefore(id1:ID,id2:ID):Boolean", "kind" : "def"}, {"label" : "endEvents", "tail" : "(): Vector[EndEvent[ID]]", "member" : "s_mach.concurrent.util.SerializationSchedule.endEvents", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#endEvents:Vector[s_mach.concurrent.util.SerializationSchedule.EndEvent[ID]]", "kind" : "def"}, {"label" : "startEvents", "tail" : "(): Vector[StartEvent[ID]]", "member" : "s_mach.concurrent.util.SerializationSchedule.startEvents", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#startEvents:Vector[s_mach.concurrent.util.SerializationSchedule.StartEvent[ID]]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "s_mach.concurrent.util.SerializationSchedule.toString", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#toString():String", "kind" : "def"}, {"label" : "eventMap", "tail" : "(): Map[ID, Event[ID]]", "member" : "s_mach.concurrent.util.SerializationSchedule.eventMap", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#eventMap:Map[ID,s_mach.concurrent.util.SerializationSchedule.Event[ID]]", "kind" : "def"}, {"label" : "orderedEvents", "tail" : "(): Vector[Event[ID]]", "member" : "s_mach.concurrent.util.SerializationSchedule.orderedEvents", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#orderedEvents:Vector[s_mach.concurrent.util.SerializationSchedule.Event[ID]]", "kind" : "def"}, {"label" : "addEndEvent", "tail" : "(id: ID, ignoreIfExist: Boolean): FiniteDuration", "member" : "s_mach.concurrent.util.SerializationSchedule.addEndEvent", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#addEndEvent(id:ID,ignoreIfExist:Boolean):scala.concurrent.duration.FiniteDuration", "kind" : "def"}, {"label" : "addStartEvent", "tail" : "(id: ID, ignoreIfExist: Boolean): FiniteDuration", "member" : "s_mach.concurrent.util.SerializationSchedule.addStartEvent", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#addStartEvent(id:ID,ignoreIfExist:Boolean):scala.concurrent.duration.FiniteDuration", "kind" : "def"}, {"label" : "addEvent", "tail" : "(id: ID, ignoreIfExist: Boolean): FiniteDuration", "member" : "s_mach.concurrent.util.SerializationSchedule.addEvent", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#addEvent(id:ID,ignoreIfExist:Boolean):scala.concurrent.duration.FiniteDuration", "kind" : "def"}, {"label" : "debug", "tail" : "(__debug: (ID) ⇒ Unit): (ID) ⇒ Unit", "member" : "s_mach.concurrent.util.SerializationSchedule.debug", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#debug(__debug:ID=>Unit):ID=>Unit", "kind" : "def"}, {"label" : "startTime_ns", "tail" : ": Long", "member" : "s_mach.concurrent.util.SerializationSchedule.startTime_ns", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#startTime_ns:Long", "kind" : "val"}, {"member" : "s_mach.concurrent.util.SerializationSchedule#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/SerializationSchedule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "EndEvent", "tail" : "", "member" : "s_mach.concurrent.util.SerializationSchedule.EndEvent", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#EndEvent[ID]extendsSerializationSchedule.Event[ID]withProductwithSerializable", "kind" : "case class"}, {"label" : "StartEvent", "tail" : "", "member" : "s_mach.concurrent.util.SerializationSchedule.StartEvent", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#StartEvent[ID]extendsSerializationSchedule.Event[ID]withProductwithSerializable", "kind" : "case class"}, {"label" : "Event", "tail" : "", "member" : "s_mach.concurrent.util.SerializationSchedule.Event", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#Event[ID]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "apply", "tail" : "(): SerializationSchedule[ID]", "member" : "s_mach.concurrent.util.SerializationSchedule.apply", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#apply[ID]():s_mach.concurrent.util.SerializationSchedule[ID]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/SerializationSchedule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/util\/SerializationSchedule.html", "kind" : "object"}, {"name" : "s_mach.concurrent.util.SimpleProgressReporter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onCompleteStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onCompleteStep", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#onCompleteStep(sequenceNumber:Int):Unit", "kind" : "abstract def"}, {"label" : "onStartStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onStartStep", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#onStartStep(sequenceNumber:Int):Unit", "kind" : "abstract def"}, {"label" : "onCompleteTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onCompleteTask", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#onCompleteTask():Unit", "kind" : "abstract def"}, {"label" : "onStartTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onStartTask", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html#onStartTask():Unit", "kind" : "abstract def"}], "shortDescription" : "A trait for a simple progress reporter that accumulates total progress fromcompleted reports and makes a report each time there is progress during atask.", "object" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html", "members_object" : [{"label" : "apply", "tail" : "(optTotal: Option[Int], report: (Progress) ⇒ Unit): SimpleProgressReporter", "member" : "s_mach.concurrent.util.SimpleProgressReporter.apply", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#apply(optTotal:Option[Int],report:s_mach.concurrent.util.Progress=>Unit):s_mach.concurrent.util.SimpleProgressReporter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/SimpleProgressReporter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/util\/SimpleProgressReporter.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.TaskEventListener", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onCompleteStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onCompleteStep", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#onCompleteStep(sequenceNumber:Int):Unit", "kind" : "abstract def"}, {"label" : "onStartStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onStartStep", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#onStartStep(sequenceNumber:Int):Unit", "kind" : "abstract def"}, {"label" : "onCompleteTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onCompleteTask", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#onCompleteTask():Unit", "kind" : "abstract def"}, {"label" : "onStartTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onStartTask", "link" : "s_mach\/concurrent\/util\/TaskEventListener.html#onStartTask():Unit", "kind" : "abstract def"}], "shortDescription" : "A trait for listening to the progress of a task that consists of one or morediscrete steps.", "trait" : "s_mach\/concurrent\/util\/TaskEventListener.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.ThrottleControl", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "adjustThrottle_ns", "tail" : "(adjust_ns: Long): Long", "member" : "s_mach.concurrent.util.ThrottleControl.adjustThrottle_ns", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#adjustThrottle_ns(adjust_ns:Long):Long", "kind" : "abstract def"}, {"label" : "throttle_ns", "tail" : "(throttle_ns: Long): Long", "member" : "s_mach.concurrent.util.ThrottleControl.throttle_ns", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#throttle_ns(throttle_ns:Long):Long", "kind" : "abstract def"}, {"label" : "throttle_ns", "tail" : "(): Long", "member" : "s_mach.concurrent.util.ThrottleControl.throttle_ns", "link" : "s_mach\/concurrent\/util\/ThrottleControl.html#throttle_ns:Long", "kind" : "abstract def"}], "shortDescription" : "A trait for controlling the throttle value of some operation", "trait" : "s_mach\/concurrent\/util\/ThrottleControl.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.util.Throttler", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Throttler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Throttler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Throttler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Throttler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Throttler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Throttler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Throttler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Throttler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Throttler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Throttler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Throttler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Throttler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Throttler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Throttler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Throttler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Throttler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Throttler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Throttler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Throttler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(task: ⇒ Future[X])(ec: ExecutionContext): DeferredFuture[X]", "member" : "s_mach.concurrent.util.Throttler.run", "link" : "s_mach\/concurrent\/util\/Throttler.html#run[X](task:=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[X]", "kind" : "abstract def"}, {"label" : "adjustThrottle_ns", "tail" : "(adjust_ns: Long): Long", "member" : "s_mach.concurrent.util.ThrottleControl.adjustThrottle_ns", "link" : "s_mach\/concurrent\/util\/Throttler.html#adjustThrottle_ns(adjust_ns:Long):Long", "kind" : "abstract def"}, {"label" : "throttle_ns", "tail" : "(throttle_ns: Long): Long", "member" : "s_mach.concurrent.util.ThrottleControl.throttle_ns", "link" : "s_mach\/concurrent\/util\/Throttler.html#throttle_ns(throttle_ns:Long):Long", "kind" : "abstract def"}, {"label" : "throttle_ns", "tail" : "(): Long", "member" : "s_mach.concurrent.util.ThrottleControl.throttle_ns", "link" : "s_mach\/concurrent\/util\/Throttler.html#throttle_ns:Long", "kind" : "abstract def"}], "shortDescription" : "A trait that ensures a series of tasks run no faster than the throttlesetting.", "object" : "s_mach\/concurrent\/util\/Throttler$.html", "members_object" : [{"label" : "apply", "tail" : "(throttle_ns: Long)(scheduledExecutionContext: ScheduledExecutionContext): Throttler", "member" : "s_mach.concurrent.util.Throttler.apply", "link" : "s_mach\/concurrent\/util\/Throttler$.html#apply(throttle_ns:Long)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):s_mach.concurrent.util.Throttler", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/util\/Throttler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/util\/Throttler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/util\/Throttler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/util\/Throttler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/util\/Throttler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/util\/Throttler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/util\/Throttler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Throttler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Throttler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/util\/Throttler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/util\/Throttler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/util\/Throttler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/util\/Throttler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/util\/Throttler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/util\/Throttler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/util\/Throttler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/util\/Throttler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/util\/Throttler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/util\/Throttler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/util\/Throttler.html", "kind" : "trait"}], "s_mach" : [], "s_mach.concurrent" : [{"name" : "s_mach.concurrent.AsyncParThrowable", "members_trait" : [{"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/AsyncParThrowable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "allFailure", "tail" : "(): Future[Vector[Throwable]]", "member" : "s_mach.concurrent.AsyncParThrowable.allFailure", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#allFailure:scala.concurrent.Future[Vector[Throwable]]", "kind" : "abstract def"}, {"label" : "firstFailure", "tail" : "(): Throwable", "member" : "s_mach.concurrent.AsyncParThrowable.firstFailure", "link" : "s_mach\/concurrent\/AsyncParThrowable.html#firstFailure:Throwable", "kind" : "abstract def"}], "shortDescription" : "A trait for capturing all failures thrown during an asynchronous paralleltask.", "object" : "s_mach\/concurrent\/AsyncParThrowable$.html", "members_object" : [{"label" : "apply", "tail" : "(firstFailure: Throwable, allFailure: ⇒ Future[Vector[Throwable]]): AsyncParThrowable", "member" : "s_mach.concurrent.AsyncParThrowable.apply", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#apply(firstFailure:Throwable,allFailure:=>scala.concurrent.Future[Vector[Throwable]]):s_mach.concurrent.AsyncParThrowable", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/AsyncParThrowable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/AsyncParThrowable.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.CancellableDelayedFuture", "members_trait" : [{"label" : "isStarted", "tail" : "(): Boolean", "member" : "s_mach.concurrent.DeferredFuture.isStarted", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#isStarted:Boolean", "kind" : "def"}, {"label" : "andThen", "tail" : "(pf: PartialFunction[Try[A], U])(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.andThen", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): Future[S]", "member" : "scala.concurrent.Future.mapTo", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): Future[U]", "member" : "scala.concurrent.Future.fallbackTo", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (A, U) ⇒ R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): Future[(A, U)]", "member" : "scala.concurrent.Future.zip", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#zip[U](that:scala.concurrent.Future[U]):scala.concurrent.Future[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recoverWith", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recover", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.collect", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.withFilter", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.filter", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#flatten[S](implicitev:<:<[T,scala.concurrent.Future[S]]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.flatMap", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ S)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.map", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (A) ⇒ S, f: (Throwable) ⇒ Throwable)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "failed", "tail" : "(): Future[Throwable]", "member" : "scala.concurrent.Future.failed", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#failed:scala.concurrent.Future[Throwable]", "kind" : "def"}, {"label" : "onFailure", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onFailure", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#onFailure[U](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(pf: PartialFunction[A, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onSuccess", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#onSuccess[U](pf:PartialFunction[T,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cancel", "tail" : "(): Boolean", "member" : "s_mach.concurrent.CancellableFuture.cancel", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#cancel():Boolean", "kind" : "abstract def"}, {"label" : "isCancelled", "tail" : "(): Boolean", "member" : "s_mach.concurrent.CancellableFuture.isCancelled", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#isCancelled:Boolean", "kind" : "abstract def"}, {"label" : "canCancel", "tail" : "(): Boolean", "member" : "s_mach.concurrent.CancellableFuture.canCancel", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#canCancel:Boolean", "kind" : "abstract def"}, {"label" : "delay", "tail" : "(): Duration", "member" : "s_mach.concurrent.DelayedFuture.delay", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#delay:scala.concurrent.duration.Duration", "kind" : "abstract def"}, {"label" : "startTime_ns", "tail" : "(): Long", "member" : "s_mach.concurrent.DelayedFuture.startTime_ns", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#startTime_ns:Long", "kind" : "abstract def"}, {"label" : "deferred", "tail" : "(): Future[Future[A]]", "member" : "s_mach.concurrent.DeferredFuture.deferred", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#deferred:scala.concurrent.Future[scala.concurrent.Future[A]]", "kind" : "abstract def"}, {"label" : "transformWith", "tail" : "(f: (Try[A]) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transformWith", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#transformWith[S](f:scala.util.Try[T]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (Try[A]) ⇒ Try[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#transform[S](f:scala.util.Try[T]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): Option[Try[A]]", "member" : "scala.concurrent.Future.value", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#value:Option[scala.util.Try[T]]", "kind" : "abstract def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "scala.concurrent.Future.isCompleted", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#isCompleted:Boolean", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(f: (Try[A]) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onComplete", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#onComplete[U](f:scala.util.Try[T]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "abstract def"}, {"label" : "result", "tail" : "(atMost: Duration)(permit: CanAwait): A", "member" : "scala.concurrent.Awaitable.result", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):T", "kind" : "abstract def"}, {"label" : "ready", "tail" : "(atMost: Duration)(permit: CanAwait): CancellableDelayedFuture.this.type", "member" : "scala.concurrent.Awaitable.ready", "link" : "s_mach\/concurrent\/CancellableDelayedFuture.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):Awaitable.this.type", "kind" : "abstract def"}], "shortDescription" : "A trait for a future that will be started after a delay and can be cancelled", "trait" : "s_mach\/concurrent\/CancellableDelayedFuture.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.CancellableFuture", "members_trait" : [{"label" : "andThen", "tail" : "(pf: PartialFunction[Try[A], U])(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.andThen", "link" : "s_mach\/concurrent\/CancellableFuture.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): Future[S]", "member" : "scala.concurrent.Future.mapTo", "link" : "s_mach\/concurrent\/CancellableFuture.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): Future[U]", "member" : "scala.concurrent.Future.fallbackTo", "link" : "s_mach\/concurrent\/CancellableFuture.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (A, U) ⇒ R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "s_mach\/concurrent\/CancellableFuture.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): Future[(A, U)]", "member" : "scala.concurrent.Future.zip", "link" : "s_mach\/concurrent\/CancellableFuture.html#zip[U](that:scala.concurrent.Future[U]):scala.concurrent.Future[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recoverWith", "link" : "s_mach\/concurrent\/CancellableFuture.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recover", "link" : "s_mach\/concurrent\/CancellableFuture.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.collect", "link" : "s_mach\/concurrent\/CancellableFuture.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.withFilter", "link" : "s_mach\/concurrent\/CancellableFuture.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.filter", "link" : "s_mach\/concurrent\/CancellableFuture.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "s_mach\/concurrent\/CancellableFuture.html#flatten[S](implicitev:<:<[T,scala.concurrent.Future[S]]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.flatMap", "link" : "s_mach\/concurrent\/CancellableFuture.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ S)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.map", "link" : "s_mach\/concurrent\/CancellableFuture.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (A) ⇒ S, f: (Throwable) ⇒ Throwable)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/CancellableFuture.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "s_mach\/concurrent\/CancellableFuture.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "failed", "tail" : "(): Future[Throwable]", "member" : "scala.concurrent.Future.failed", "link" : "s_mach\/concurrent\/CancellableFuture.html#failed:scala.concurrent.Future[Throwable]", "kind" : "def"}, {"label" : "onFailure", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onFailure", "link" : "s_mach\/concurrent\/CancellableFuture.html#onFailure[U](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(pf: PartialFunction[A, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onSuccess", "link" : "s_mach\/concurrent\/CancellableFuture.html#onSuccess[U](pf:PartialFunction[T,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/CancellableFuture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/CancellableFuture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/CancellableFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/CancellableFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/CancellableFuture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/CancellableFuture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/CancellableFuture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/CancellableFuture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/CancellableFuture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/CancellableFuture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/CancellableFuture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/CancellableFuture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/CancellableFuture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/CancellableFuture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/CancellableFuture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/CancellableFuture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/CancellableFuture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/CancellableFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/CancellableFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cancel", "tail" : "(): Boolean", "member" : "s_mach.concurrent.CancellableFuture.cancel", "link" : "s_mach\/concurrent\/CancellableFuture.html#cancel():Boolean", "kind" : "abstract def"}, {"label" : "isCancelled", "tail" : "(): Boolean", "member" : "s_mach.concurrent.CancellableFuture.isCancelled", "link" : "s_mach\/concurrent\/CancellableFuture.html#isCancelled:Boolean", "kind" : "abstract def"}, {"label" : "canCancel", "tail" : "(): Boolean", "member" : "s_mach.concurrent.CancellableFuture.canCancel", "link" : "s_mach\/concurrent\/CancellableFuture.html#canCancel:Boolean", "kind" : "abstract def"}, {"label" : "transformWith", "tail" : "(f: (Try[A]) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transformWith", "link" : "s_mach\/concurrent\/CancellableFuture.html#transformWith[S](f:scala.util.Try[T]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (Try[A]) ⇒ Try[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/CancellableFuture.html#transform[S](f:scala.util.Try[T]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): Option[Try[A]]", "member" : "scala.concurrent.Future.value", "link" : "s_mach\/concurrent\/CancellableFuture.html#value:Option[scala.util.Try[T]]", "kind" : "abstract def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "scala.concurrent.Future.isCompleted", "link" : "s_mach\/concurrent\/CancellableFuture.html#isCompleted:Boolean", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(f: (Try[A]) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onComplete", "link" : "s_mach\/concurrent\/CancellableFuture.html#onComplete[U](f:scala.util.Try[T]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "abstract def"}, {"label" : "result", "tail" : "(atMost: Duration)(permit: CanAwait): A", "member" : "scala.concurrent.Awaitable.result", "link" : "s_mach\/concurrent\/CancellableFuture.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):T", "kind" : "abstract def"}, {"label" : "ready", "tail" : "(atMost: Duration)(permit: CanAwait): CancellableFuture.this.type", "member" : "scala.concurrent.Awaitable.ready", "link" : "s_mach\/concurrent\/CancellableFuture.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):Awaitable.this.type", "kind" : "abstract def"}], "shortDescription" : "A trait for a future that can be cancelled if it has not been started", "trait" : "s_mach\/concurrent\/CancellableFuture.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.DeferredFuture", "members_trait" : [{"label" : "isStarted", "tail" : "(): Boolean", "member" : "s_mach.concurrent.DeferredFuture.isStarted", "link" : "s_mach\/concurrent\/DeferredFuture.html#isStarted:Boolean", "kind" : "def"}, {"label" : "andThen", "tail" : "(pf: PartialFunction[Try[A], U])(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.andThen", "link" : "s_mach\/concurrent\/DeferredFuture.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): Future[S]", "member" : "scala.concurrent.Future.mapTo", "link" : "s_mach\/concurrent\/DeferredFuture.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): Future[U]", "member" : "scala.concurrent.Future.fallbackTo", "link" : "s_mach\/concurrent\/DeferredFuture.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (A, U) ⇒ R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "s_mach\/concurrent\/DeferredFuture.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): Future[(A, U)]", "member" : "scala.concurrent.Future.zip", "link" : "s_mach\/concurrent\/DeferredFuture.html#zip[U](that:scala.concurrent.Future[U]):scala.concurrent.Future[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recoverWith", "link" : "s_mach\/concurrent\/DeferredFuture.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recover", "link" : "s_mach\/concurrent\/DeferredFuture.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.collect", "link" : "s_mach\/concurrent\/DeferredFuture.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.withFilter", "link" : "s_mach\/concurrent\/DeferredFuture.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.filter", "link" : "s_mach\/concurrent\/DeferredFuture.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "s_mach\/concurrent\/DeferredFuture.html#flatten[S](implicitev:<:<[T,scala.concurrent.Future[S]]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.flatMap", "link" : "s_mach\/concurrent\/DeferredFuture.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ S)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.map", "link" : "s_mach\/concurrent\/DeferredFuture.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (A) ⇒ S, f: (Throwable) ⇒ Throwable)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/DeferredFuture.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "s_mach\/concurrent\/DeferredFuture.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "failed", "tail" : "(): Future[Throwable]", "member" : "scala.concurrent.Future.failed", "link" : "s_mach\/concurrent\/DeferredFuture.html#failed:scala.concurrent.Future[Throwable]", "kind" : "def"}, {"label" : "onFailure", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onFailure", "link" : "s_mach\/concurrent\/DeferredFuture.html#onFailure[U](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(pf: PartialFunction[A, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onSuccess", "link" : "s_mach\/concurrent\/DeferredFuture.html#onSuccess[U](pf:PartialFunction[T,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/DeferredFuture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/DeferredFuture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/DeferredFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/DeferredFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/DeferredFuture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/DeferredFuture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/DeferredFuture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/DeferredFuture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/DeferredFuture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/DeferredFuture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/DeferredFuture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/DeferredFuture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/DeferredFuture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/DeferredFuture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/DeferredFuture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/DeferredFuture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/DeferredFuture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/DeferredFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/DeferredFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deferred", "tail" : "(): Future[Future[A]]", "member" : "s_mach.concurrent.DeferredFuture.deferred", "link" : "s_mach\/concurrent\/DeferredFuture.html#deferred:scala.concurrent.Future[scala.concurrent.Future[A]]", "kind" : "abstract def"}, {"label" : "transformWith", "tail" : "(f: (Try[A]) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transformWith", "link" : "s_mach\/concurrent\/DeferredFuture.html#transformWith[S](f:scala.util.Try[T]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (Try[A]) ⇒ Try[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/DeferredFuture.html#transform[S](f:scala.util.Try[T]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): Option[Try[A]]", "member" : "scala.concurrent.Future.value", "link" : "s_mach\/concurrent\/DeferredFuture.html#value:Option[scala.util.Try[T]]", "kind" : "abstract def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "scala.concurrent.Future.isCompleted", "link" : "s_mach\/concurrent\/DeferredFuture.html#isCompleted:Boolean", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(f: (Try[A]) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onComplete", "link" : "s_mach\/concurrent\/DeferredFuture.html#onComplete[U](f:scala.util.Try[T]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "abstract def"}, {"label" : "result", "tail" : "(atMost: Duration)(permit: CanAwait): A", "member" : "scala.concurrent.Awaitable.result", "link" : "s_mach\/concurrent\/DeferredFuture.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):T", "kind" : "abstract def"}, {"label" : "ready", "tail" : "(atMost: Duration)(permit: CanAwait): DeferredFuture.this.type", "member" : "scala.concurrent.Awaitable.ready", "link" : "s_mach\/concurrent\/DeferredFuture.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):Awaitable.this.type", "kind" : "abstract def"}], "shortDescription" : "A trait for a future whose execution does not begin until some conditionoccurs.", "object" : "s_mach\/concurrent\/DeferredFuture$.html", "members_object" : [{"label" : "apply", "tail" : "(deferred: Future[Future[A]])(ec: ExecutionContext): DeferredFuture[A]", "member" : "s_mach.concurrent.DeferredFuture.apply", "link" : "s_mach\/concurrent\/DeferredFuture$.html#apply[A](deferred:scala.concurrent.Future[scala.concurrent.Future[A]])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[A]", "kind" : "def"}, {"label" : "failed", "tail" : "(cause: Throwable)(ec: ExecutionContext): DeferredFuture[Nothing]", "member" : "s_mach.concurrent.DeferredFuture.failed", "link" : "s_mach\/concurrent\/DeferredFuture$.html#failed(cause:Throwable)(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[Nothing]", "kind" : "def"}, {"label" : "successful", "tail" : "(future: Future[A])(ec: ExecutionContext): DeferredFuture[A]", "member" : "s_mach.concurrent.DeferredFuture.successful", "link" : "s_mach\/concurrent\/DeferredFuture$.html#successful[A](future:scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/DeferredFuture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/DeferredFuture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/DeferredFuture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/DeferredFuture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/DeferredFuture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/DeferredFuture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/DeferredFuture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/DeferredFuture$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/DeferredFuture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/DeferredFuture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/DeferredFuture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/DeferredFuture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/DeferredFuture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/DeferredFuture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/DeferredFuture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/DeferredFuture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/DeferredFuture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/DeferredFuture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/DeferredFuture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/DeferredFuture.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.DelayedFuture", "members_trait" : [{"label" : "isStarted", "tail" : "(): Boolean", "member" : "s_mach.concurrent.DeferredFuture.isStarted", "link" : "s_mach\/concurrent\/DelayedFuture.html#isStarted:Boolean", "kind" : "def"}, {"label" : "andThen", "tail" : "(pf: PartialFunction[Try[A], U])(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.andThen", "link" : "s_mach\/concurrent\/DelayedFuture.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): Future[S]", "member" : "scala.concurrent.Future.mapTo", "link" : "s_mach\/concurrent\/DelayedFuture.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): Future[U]", "member" : "scala.concurrent.Future.fallbackTo", "link" : "s_mach\/concurrent\/DelayedFuture.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (A, U) ⇒ R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "s_mach\/concurrent\/DelayedFuture.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): Future[(A, U)]", "member" : "scala.concurrent.Future.zip", "link" : "s_mach\/concurrent\/DelayedFuture.html#zip[U](that:scala.concurrent.Future[U]):scala.concurrent.Future[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recoverWith", "link" : "s_mach\/concurrent\/DelayedFuture.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recover", "link" : "s_mach\/concurrent\/DelayedFuture.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.collect", "link" : "s_mach\/concurrent\/DelayedFuture.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.withFilter", "link" : "s_mach\/concurrent\/DelayedFuture.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.filter", "link" : "s_mach\/concurrent\/DelayedFuture.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "s_mach\/concurrent\/DelayedFuture.html#flatten[S](implicitev:<:<[T,scala.concurrent.Future[S]]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.flatMap", "link" : "s_mach\/concurrent\/DelayedFuture.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ S)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.map", "link" : "s_mach\/concurrent\/DelayedFuture.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (A) ⇒ S, f: (Throwable) ⇒ Throwable)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/DelayedFuture.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "s_mach\/concurrent\/DelayedFuture.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "failed", "tail" : "(): Future[Throwable]", "member" : "scala.concurrent.Future.failed", "link" : "s_mach\/concurrent\/DelayedFuture.html#failed:scala.concurrent.Future[Throwable]", "kind" : "def"}, {"label" : "onFailure", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onFailure", "link" : "s_mach\/concurrent\/DelayedFuture.html#onFailure[U](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(pf: PartialFunction[A, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onSuccess", "link" : "s_mach\/concurrent\/DelayedFuture.html#onSuccess[U](pf:PartialFunction[T,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/DelayedFuture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/DelayedFuture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/DelayedFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/DelayedFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/DelayedFuture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/DelayedFuture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/DelayedFuture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/DelayedFuture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/DelayedFuture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/DelayedFuture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/DelayedFuture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/DelayedFuture.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/DelayedFuture.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/DelayedFuture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/DelayedFuture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/DelayedFuture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/DelayedFuture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/DelayedFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/DelayedFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "delay", "tail" : "(): Duration", "member" : "s_mach.concurrent.DelayedFuture.delay", "link" : "s_mach\/concurrent\/DelayedFuture.html#delay:scala.concurrent.duration.Duration", "kind" : "abstract def"}, {"label" : "startTime_ns", "tail" : "(): Long", "member" : "s_mach.concurrent.DelayedFuture.startTime_ns", "link" : "s_mach\/concurrent\/DelayedFuture.html#startTime_ns:Long", "kind" : "abstract def"}, {"label" : "deferred", "tail" : "(): Future[Future[A]]", "member" : "s_mach.concurrent.DeferredFuture.deferred", "link" : "s_mach\/concurrent\/DelayedFuture.html#deferred:scala.concurrent.Future[scala.concurrent.Future[A]]", "kind" : "abstract def"}, {"label" : "transformWith", "tail" : "(f: (Try[A]) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transformWith", "link" : "s_mach\/concurrent\/DelayedFuture.html#transformWith[S](f:scala.util.Try[T]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (Try[A]) ⇒ Try[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/DelayedFuture.html#transform[S](f:scala.util.Try[T]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): Option[Try[A]]", "member" : "scala.concurrent.Future.value", "link" : "s_mach\/concurrent\/DelayedFuture.html#value:Option[scala.util.Try[T]]", "kind" : "abstract def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "scala.concurrent.Future.isCompleted", "link" : "s_mach\/concurrent\/DelayedFuture.html#isCompleted:Boolean", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(f: (Try[A]) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onComplete", "link" : "s_mach\/concurrent\/DelayedFuture.html#onComplete[U](f:scala.util.Try[T]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "abstract def"}, {"label" : "result", "tail" : "(atMost: Duration)(permit: CanAwait): A", "member" : "scala.concurrent.Awaitable.result", "link" : "s_mach\/concurrent\/DelayedFuture.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):T", "kind" : "abstract def"}, {"label" : "ready", "tail" : "(atMost: Duration)(permit: CanAwait): DelayedFuture.this.type", "member" : "scala.concurrent.Awaitable.ready", "link" : "s_mach\/concurrent\/DelayedFuture.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):Awaitable.this.type", "kind" : "abstract def"}], "shortDescription" : "A trait for a future that will be started after a delay", "trait" : "s_mach\/concurrent\/DelayedFuture.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.PeriodicTask", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/PeriodicTask.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/PeriodicTask.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/PeriodicTask.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/PeriodicTask.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/PeriodicTask.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/PeriodicTask.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/PeriodicTask.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/PeriodicTask.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/PeriodicTask.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/PeriodicTask.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/PeriodicTask.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/PeriodicTask.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/PeriodicTask.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/PeriodicTask.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/PeriodicTask.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/PeriodicTask.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/PeriodicTask.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/PeriodicTask.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/PeriodicTask.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onCancel", "tail" : "(): Barrier", "member" : "s_mach.concurrent.PeriodicTask.onCancel", "link" : "s_mach\/concurrent\/PeriodicTask.html#onCancel:s_mach.concurrent.util.Barrier", "kind" : "abstract def"}, {"label" : "cancel", "tail" : "(): Boolean", "member" : "s_mach.concurrent.PeriodicTask.cancel", "link" : "s_mach\/concurrent\/PeriodicTask.html#cancel():Boolean", "kind" : "abstract def"}, {"label" : "state", "tail" : "(): State", "member" : "s_mach.concurrent.PeriodicTask.state", "link" : "s_mach\/concurrent\/PeriodicTask.html#state:s_mach.concurrent.PeriodicTask.State", "kind" : "abstract def"}, {"label" : "period", "tail" : "(): Duration", "member" : "s_mach.concurrent.PeriodicTask.period", "link" : "s_mach\/concurrent\/PeriodicTask.html#period:scala.concurrent.duration.Duration", "kind" : "abstract def"}, {"label" : "initialDelay", "tail" : "(): Duration", "member" : "s_mach.concurrent.PeriodicTask.initialDelay", "link" : "s_mach\/concurrent\/PeriodicTask.html#initialDelay:scala.concurrent.duration.Duration", "kind" : "abstract def"}, {"label" : "nextEvent_ns", "tail" : "(): Long", "member" : "s_mach.concurrent.PeriodicTask.nextEvent_ns", "link" : "s_mach\/concurrent\/PeriodicTask.html#nextEvent_ns:Long", "kind" : "abstract def"}], "shortDescription" : "", "object" : "s_mach\/concurrent\/PeriodicTask$.html", "members_object" : [{"label" : "Cancelled", "tail" : "", "member" : "s_mach.concurrent.PeriodicTask.Cancelled", "link" : "s_mach\/concurrent\/PeriodicTask$.html#Cancelled", "kind" : "object"}, {"label" : "Paused", "tail" : "", "member" : "s_mach.concurrent.PeriodicTask.Paused", "link" : "s_mach\/concurrent\/PeriodicTask$.html#PausedextendsPeriodicTask.State", "kind" : "trait"}, {"label" : "Running", "tail" : "", "member" : "s_mach.concurrent.PeriodicTask.Running", "link" : "s_mach\/concurrent\/PeriodicTask$.html#RunningextendsPeriodicTask.State", "kind" : "trait"}, {"label" : "State", "tail" : "", "member" : "s_mach.concurrent.PeriodicTask.State", "link" : "s_mach\/concurrent\/PeriodicTask$.html#StateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/PeriodicTask$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/PeriodicTask$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/PeriodicTask$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/PeriodicTask$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/PeriodicTask$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/PeriodicTask$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/PeriodicTask$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/PeriodicTask$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/PeriodicTask$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/PeriodicTask$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/PeriodicTask$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/PeriodicTask$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/PeriodicTask$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/PeriodicTask$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/PeriodicTask$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/PeriodicTask$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/PeriodicTask$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/PeriodicTask$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/PeriodicTask$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/PeriodicTask.html", "kind" : "object"}, {"name" : "s_mach.concurrent.ScheduledExecutionContext", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportFailure", "tail" : "(cause: Throwable): Unit", "member" : "s_mach.concurrent.ScheduledExecutionContext.reportFailure", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#reportFailure(cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: FiniteDuration, period: FiniteDuration, paused: Boolean)(task: () ⇒ U): PeriodicTask", "member" : "s_mach.concurrent.ScheduledExecutionContext.scheduleAtFixedRate", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#scheduleAtFixedRate[U](initialDelay:scala.concurrent.duration.FiniteDuration,period:scala.concurrent.duration.FiniteDuration,paused:Boolean)(task:()=>U):s_mach.concurrent.PeriodicTask", "kind" : "abstract def"}, {"label" : "scheduleCancellable", "tail" : "(delay: FiniteDuration, fallback: ⇒ A)(f: ⇒ A): CancellableDelayedFuture[A]", "member" : "s_mach.concurrent.ScheduledExecutionContext.scheduleCancellable", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#scheduleCancellable[A](delay:scala.concurrent.duration.FiniteDuration,fallback:=>A)(f:=>A):s_mach.concurrent.CancellableDelayedFuture[A]", "kind" : "abstract def"}, {"label" : "schedule", "tail" : "(delay: FiniteDuration)(f: ⇒ A): DelayedFuture[A]", "member" : "s_mach.concurrent.ScheduledExecutionContext.schedule", "link" : "s_mach\/concurrent\/ScheduledExecutionContext.html#schedule[A](delay:scala.concurrent.duration.FiniteDuration)(f:=>A):s_mach.concurrent.DelayedFuture[A]", "kind" : "abstract def"}], "shortDescription" : "A trait for scheduling delayed or periodic tasks", "object" : "s_mach\/concurrent\/ScheduledExecutionContext$.html", "members_object" : [{"label" : "apply", "tail" : "(corePoolSize: Int)(executionContext: ExecutionContext): ScheduledExecutionContext", "member" : "s_mach.concurrent.ScheduledExecutionContext.apply", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#apply(corePoolSize:Int)(implicitexecutionContext:scala.concurrent.ExecutionContext):s_mach.concurrent.ScheduledExecutionContext", "kind" : "def"}, {"label" : "apply", "tail" : "(corePoolSize: Int, threadFactory: ThreadFactory)(executionContext: ExecutionContext): ScheduledExecutionContext", "member" : "s_mach.concurrent.ScheduledExecutionContext.apply", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#apply(corePoolSize:Int,threadFactory:java.util.concurrent.ThreadFactory)(implicitexecutionContext:scala.concurrent.ExecutionContext):s_mach.concurrent.ScheduledExecutionContext", "kind" : "def"}, {"label" : "fromExecutor", "tail" : "(scheduledExecutorService: ScheduledExecutorService)(executionContext: ExecutionContext): ScheduledExecutionContext", "member" : "s_mach.concurrent.ScheduledExecutionContext.fromExecutor", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#fromExecutor(scheduledExecutorService:java.util.concurrent.ScheduledExecutorService)(implicitexecutionContext:scala.concurrent.ExecutionContext):s_mach.concurrent.ScheduledExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/ScheduledExecutionContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/ScheduledExecutionContext.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.SMach_Concurrent_PimpEverything", "shortDescription" : "", "members_class" : [{"label" : "future", "tail" : "(): Future[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpEverything.future", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html#future:scala.concurrent.Future[A]", "kind" : "def"}, {"member" : "s_mach.concurrent.SMach_Concurrent_PimpEverything#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": A", "member" : "s_mach.concurrent.SMach_Concurrent_PimpEverything.self", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html#self:A", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpEverything.html", "kind" : "class"}, {"name" : "s_mach.concurrent.SMach_Concurrent_PimpMyAsyncConfigBuilder", "shortDescription" : "", "members_class" : [{"member" : "s_mach.concurrent.SMach_Concurrent_PimpMyAsyncConfigBuilder#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyAsyncConfigBuilder.self", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#self:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S], ft: ⇒ Future[T], fu: ⇒ Future[U], fv: ⇒ Future[V])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S],ft:=>scala.concurrent.Future[T],fu:=>scala.concurrent.Future[U],fv:=>scala.concurrent.Future[V])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S], ft: ⇒ Future[T], fu: ⇒ Future[U])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S],ft:=>scala.concurrent.Future[T],fu:=>scala.concurrent.Future[U])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S], ft: ⇒ Future[T])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S],ft:=>scala.concurrent.Future[T])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K,L](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J,K](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I,J](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H,I](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G,H](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F,G](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F])(ec: ExecutionContext): Future[(A, B, C, D, E, F)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E,F](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E])(ec: ExecutionContext): Future[(A, B, C, D, E)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D,E](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D])(ec: ExecutionContext): Future[(A, B, C, D)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C,D](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C])(ec: ExecutionContext): Future[(A, B, C)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B,C](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B])(ec: ExecutionContext): Future[(A, B)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#run[A,B](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B)]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyAsyncConfigBuilder.html", "kind" : "class"}, {"name" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture", "shortDescription" : "", "members_class" : [{"label" : "onTimeout", "tail" : "(timeout: FiniteDuration)(fallback: ⇒ Future[A])(ec: ExecutionContext, sec: ScheduledExecutionContext): Future[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.onTimeout", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#onTimeout(timeout:scala.concurrent.duration.FiniteDuration)(fallback:=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext,implicitsec:s_mach.concurrent.ScheduledExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "sideEffect", "tail" : "(sideEffect: ⇒ Unit)(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.sideEffect", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#sideEffect(sideEffect:=>Unit)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "happensBefore", "tail" : "(other: ⇒ Future[B])(ec: ExecutionContext): DeferredFuture[B]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.happensBefore", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#happensBefore[B](other:=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[B]", "kind" : "def"}, {"label" : "flatFold", "tail" : "(onSuccess: (A) ⇒ Future[X], onFailure: (Throwable) ⇒ Future[X])(ec: ExecutionContext): Future[X]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.flatFold", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#flatFold[X](onSuccess:A=>scala.concurrent.Future[X],onFailure:Throwable=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[X]", "kind" : "def"}, {"label" : "fold", "tail" : "(onSuccess: (A) ⇒ X, onFailure: (Throwable) ⇒ X)(ec: ExecutionContext): Future[X]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.fold", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#fold[X](onSuccess:A=>X,onFailure:Throwable=>X)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[X]", "kind" : "def"}, {"label" : "toTry", "tail" : "(ec: ExecutionContext): Future[Try[A]]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.toTry", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#toTry(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[scala.util.Try[A]]", "kind" : "def"}, {"label" : "background", "tail" : "(ec: ExecutionContext): Unit", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.background", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#background(implicitec:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "getTry", "tail" : "(max: Duration): Try[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.getTry", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#getTry(max:scala.concurrent.duration.Duration):scala.util.Try[A]", "kind" : "def"}, {"label" : "getTry", "tail" : "(): Try[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.getTry", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#getTry:scala.util.Try[A]", "kind" : "def"}, {"label" : "get", "tail" : "(max: Duration): A", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.get", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#get(max:scala.concurrent.duration.Duration):A", "kind" : "def"}, {"label" : "get", "tail" : "(): A", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.get", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#get:A", "kind" : "def"}, {"member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": Future[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFuture.self", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#self:scala.concurrent.Future[A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFuture.html", "kind" : "class"}, {"name" : "s_mach.concurrent.SMach_Concurrent_PimpMyFutureFuture", "shortDescription" : "", "members_class" : [{"label" : "flatten", "tail" : "(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFutureFuture.flatten", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html#flatten(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFutureFuture#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": Future[Future[A]]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFutureFuture.self", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html#self:scala.concurrent.Future[scala.concurrent.Future[A]]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureFuture.html", "kind" : "class"}, {"name" : "s_mach.concurrent.SMach_Concurrent_PimpMyFutureType", "shortDescription" : "", "members_class" : [{"label" : "delayed", "tail" : "(delay: FiniteDuration)(f: ⇒ A)(scheduledExecutionContext: ScheduledExecutionContext): DelayedFuture[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFutureType.delayed", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html#delayed[A](delay:scala.concurrent.duration.FiniteDuration)(f:=>A)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):s_mach.concurrent.DelayedFuture[A]", "kind" : "def"}, {"member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFutureType#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": Future.type", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyFutureType.self", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html#self:scala.concurrent.Future.type", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyFutureType.html", "kind" : "class"}, {"name" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableFuture", "shortDescription" : "", "members_class" : [{"label" : "firstSuccess", "tail" : "(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableFuture.firstSuccess", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html#firstSuccess(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "merge", "tail" : "(ec: ExecutionContext, cbf: CanBuildFrom[Nothing, A, M[A]]): Future[M[A]]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableFuture.merge", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html#merge(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,M[A]]):scala.concurrent.Future[M[A]]", "kind" : "def"}, {"member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableFuture#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": M[Future[A]]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableFuture.self", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html#self:M[scala.concurrent.Future[A]]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFuture.html", "kind" : "class"}, {"name" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableFutureTraversable", "shortDescription" : "", "members_class" : [{"label" : "flatMerge", "tail" : "(ec: ExecutionContext, cbf: CanBuildFrom[Nothing, A, M[A]]): Future[M[A]]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableFutureTraversable.flatMerge", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html#flatMerge(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,M[A]]):scala.concurrent.Future[M[A]]", "kind" : "def"}, {"member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableFutureTraversable#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": M[Future[N[A]]]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableFutureTraversable.self", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html#self:M[scala.concurrent.Future[N[A]]]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableFutureTraversable.html", "kind" : "class"}, {"name" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableOnce", "shortDescription" : "", "members_class" : [{"label" : "async", "tail" : "(ec: ExecutionContext): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableOnce.async", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html#async(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.CollectionAsyncTaskRunner[A,M]", "kind" : "def"}, {"member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableOnce#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": M[A]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableOnce.self", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html#self:M[A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnce.html", "kind" : "class"}, {"name" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableOnceFuture", "shortDescription" : "", "members_class" : [{"label" : "sequence", "tail" : "(cbf: CanBuildFrom[M[Future[A]], A, M[A]], ec: ExecutionContext): Future[M[A]]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableOnceFuture.sequence", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html#sequence(implicitcbf:scala.collection.generic.CanBuildFrom[M[scala.concurrent.Future[A]],A,M[A]],implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[M[A]]", "kind" : "def"}, {"label" : "mergeAllFailures", "tail" : "(ec: ExecutionContext, cbf: CanBuildFrom[M[Future[A]], Throwable, M[Throwable]]): Future[M[Throwable]]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableOnceFuture.mergeAllFailures", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html#mergeAllFailures(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[M[scala.concurrent.Future[A]],Throwable,M[Throwable]]):scala.concurrent.Future[M[Throwable]]", "kind" : "def"}, {"member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableOnceFuture#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": M[Future[A]]", "member" : "s_mach.concurrent.SMach_Concurrent_PimpMyTraversableOnceFuture.self", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html#self:M[scala.concurrent.Future[A]]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/package$$SMach_Concurrent_PimpMyTraversableOnceFuture.html", "kind" : "class"}], "s_mach.concurrent.impl" : [{"name" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner", "members_trait" : [{"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "s_mach\/concurrent\/impl\/AbstractAsyncTaskRunner.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.AbstractCollectionAsyncTaskRunner", "members_trait" : [{"label" : "optTotal", "tail" : "(): Option[Int]", "member" : "s_mach.concurrent.impl.AbstractCollectionAsyncTaskRunner.optTotal", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#optTotal:Option[Int]", "kind" : "def"}, {"label" : "build", "tail" : "(): AsyncConfig", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.build", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#build():s_mach.concurrent.config.AsyncConfig", "kind" : "def"}, {"label" : "throttle_ns", "tail" : "(_throttle_ns: Long)(sec: ScheduledExecutionContext): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.throttle_ns", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#throttle_ns(_throttle_ns:Long)(implicitsec:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retryDecider", "tail" : "(r: RetryDecider)(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.retryDecider", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#retryDecider(r:s_mach.concurrent.util.RetryDecider)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(r: TaskEventListener)(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.progress", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#progress(r:s_mach.concurrent.util.TaskEventListener)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "using", "tail" : "(cfg: AsyncConfig): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.using", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#using(cfg:s_mach.concurrent.config.AsyncConfig):MDT", "kind" : "def"}, {"label" : "throttle", "tail" : "(_throttle: Duration)(scheduledExecutionContext: ScheduledExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptThrottleConfigBuilder.throttle", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#throttle(_throttle:scala.concurrent.duration.Duration)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retry", "tail" : "(f: (List[Throwable]) ⇒ Future[Boolean])(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptRetryConfigBuilder.retry", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#retry(f:List[Throwable]=>scala.concurrent.Future[Boolean])(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(reportInterval: FiniteDuration)(report: (Progress) ⇒ Unit)(executionContext: ExecutionContext, scheduledExecutionContext: ScheduledExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#progress(reportInterval:scala.concurrent.duration.FiniteDuration)(report:s_mach.concurrent.util.Progress=>Unit)(implicitexecutionContext:scala.concurrent.ExecutionContext,implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(report: (Progress) ⇒ Unit)(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#progress(report:s_mach.concurrent.util.Progress=>Unit)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "input", "tail" : "(): M[A]", "member" : "s_mach.concurrent.impl.AbstractCollectionAsyncTaskRunner.input", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#input:M[A]", "kind" : "abstract def"}, {"label" : "using", "tail" : "(optProgress: Option[ProgressConfig], optRetry: Option[RetryConfig], optThrottle: Option[ThrottleConfig]): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.using", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#using(optProgress:Option[s_mach.concurrent.config.ProgressConfig],optRetry:Option[s_mach.concurrent.config.RetryConfig],optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]):MDT", "kind" : "abstract def"}, {"label" : "workerCount", "tail" : "(): Int", "member" : "s_mach.concurrent.config.AsyncConfig.workerCount", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#workerCount:Int", "kind" : "abstract def"}, {"label" : "optThrottle", "tail" : "(): Option[ThrottleConfig]", "member" : "s_mach.concurrent.config.OptThrottleConfig.optThrottle", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]", "kind" : "abstract def"}, {"label" : "optRetry", "tail" : "(): Option[RetryConfig]", "member" : "s_mach.concurrent.config.OptRetryConfig.optRetry", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#optRetry:Option[s_mach.concurrent.config.RetryConfig]", "kind" : "abstract def"}, {"label" : "optProgress", "tail" : "(): Option[ProgressConfig]", "member" : "s_mach.concurrent.config.OptProgressConfig.optProgress", "link" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html#optProgress:Option[s_mach.concurrent.config.ProgressConfig]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "s_mach\/concurrent\/impl\/AbstractCollectionAsyncTaskRunner.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"member" : "s_mach.concurrent.impl.AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner", "shortDescription" : "A case class for a serial asynchronous task runner that is configurable withoptional progress reporting, throttling and\/or failure retry.", "members_case class" : [{"label" : "foldLeft", "tail" : "(z: B)(f: (B, A) ⇒ Future[B])(cbf: CanBuildFrom[Nothing, B, M[B]], ec: ExecutionContext): Future[B]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.foldLeft", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#foldLeft[B](z:B)(f:(B,A)=>scala.concurrent.Future[B])(implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]],implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[B]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ Future[U])(ec: ExecutionContext): Future[Unit]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.foreach", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#foreach[U](f:A=>scala.concurrent.Future[U])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Future[TraversableOnce[B]])(cbf: CanBuildFrom[Nothing, B, M[B]], ec: ExecutionContext): Future[M[B]]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.flatMap", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#flatMap[B](f:A=>scala.concurrent.Future[TraversableOnce[B]])(implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]],implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ Future[B])(cbf: CanBuildFrom[Nothing, B, M[B]], ec: ExecutionContext): Future[M[B]]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.map", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#map[B](f:A=>scala.concurrent.Future[B])(implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]],implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "par", "tail" : "(workerCount: Int): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.par", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#par(workerCount:Int):s_mach.concurrent.impl.ParCollectionAsyncTaskRunner[A,M]", "kind" : "def"}, {"label" : "par", "tail" : "(): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.par", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#par:s_mach.concurrent.impl.ParCollectionAsyncTaskRunner[A,M]", "kind" : "def"}, {"label" : "using", "tail" : "(optProgress: Option[ProgressConfig], optRetry: Option[RetryConfig], optThrottle: Option[ThrottleConfig]): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.using", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#using(optProgress:Option[s_mach.concurrent.config.ProgressConfig],optRetry:Option[s_mach.concurrent.config.RetryConfig],optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]):s_mach.concurrent.impl.CollectionAsyncTaskRunner[A,M]", "kind" : "def"}, {"label" : "workerCount", "tail" : ": Int", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.workerCount", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#workerCount:Int", "kind" : "val"}, {"member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "optThrottle", "tail" : ": Option[ThrottleConfig]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.optThrottle", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]", "kind" : "val"}, {"label" : "optRetry", "tail" : ": Option[RetryConfig]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.optRetry", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#optRetry:Option[s_mach.concurrent.config.RetryConfig]", "kind" : "val"}, {"label" : "optProgress", "tail" : ": Option[ProgressConfig]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.optProgress", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#optProgress:Option[s_mach.concurrent.config.ProgressConfig]", "kind" : "val"}, {"label" : "input", "tail" : ": M[A]", "member" : "s_mach.concurrent.impl.CollectionAsyncTaskRunner.input", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#input:M[A]", "kind" : "val"}, {"label" : "optTotal", "tail" : "(): Option[Int]", "member" : "s_mach.concurrent.impl.AbstractCollectionAsyncTaskRunner.optTotal", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#optTotal:Option[Int]", "kind" : "def"}, {"label" : "build", "tail" : "(): AsyncConfig", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.build", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#build():s_mach.concurrent.config.AsyncConfig", "kind" : "def"}, {"label" : "throttle_ns", "tail" : "(_throttle_ns: Long)(sec: ScheduledExecutionContext): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.throttle_ns", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#throttle_ns(_throttle_ns:Long)(implicitsec:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retryDecider", "tail" : "(r: RetryDecider)(ec: ExecutionContext): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.retryDecider", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#retryDecider(r:s_mach.concurrent.util.RetryDecider)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(r: TaskEventListener)(ec: ExecutionContext): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.progress", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#progress(r:s_mach.concurrent.util.TaskEventListener)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "using", "tail" : "(cfg: AsyncConfig): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.using", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#using(cfg:s_mach.concurrent.config.AsyncConfig):MDT", "kind" : "def"}, {"label" : "throttle", "tail" : "(_throttle: Duration)(scheduledExecutionContext: ScheduledExecutionContext): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.OptThrottleConfigBuilder.throttle", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#throttle(_throttle:scala.concurrent.duration.Duration)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retry", "tail" : "(f: (List[Throwable]) ⇒ Future[Boolean])(ec: ExecutionContext): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.OptRetryConfigBuilder.retry", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#retry(f:List[Throwable]=>scala.concurrent.Future[Boolean])(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(reportInterval: FiniteDuration)(report: (Progress) ⇒ Unit)(executionContext: ExecutionContext, scheduledExecutionContext: ScheduledExecutionContext): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#progress(reportInterval:scala.concurrent.duration.FiniteDuration)(report:s_mach.concurrent.util.Progress=>Unit)(implicitexecutionContext:scala.concurrent.ExecutionContext,implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(report: (Progress) ⇒ Unit)(ec: ExecutionContext): CollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#progress(report:s_mach.concurrent.util.Progress=>Unit)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/CollectionAsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.ConcurrentTestContextImpl", "shortDescription" : "", "members_class" : [{"label" : "delay", "tail" : "(delay_ns: Long): Unit", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl.delay", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#delay(delay_ns:Long):Unit", "kind" : "def"}, {"label" : "delayError_ns", "tail" : "(): Long", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl.delayError_ns", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#delayError_ns:Long", "kind" : "def"}, {"label" : "_delayError_ns", "tail" : ": AtomicLong", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl._delayError_ns", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#_delayError_ns:java.util.concurrent.atomic.AtomicLong", "kind" : "val"}, {"label" : "sched", "tail" : ": SerializationSchedule[String]", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl.sched", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#sched:s_mach.concurrent.util.SerializationSchedule[String]", "kind" : "implicit val"}, {"label" : "schedule", "tail" : "(delay: FiniteDuration)(f: ⇒ A): DelayedFuture[A]", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl.schedule", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#schedule[A](delay:scala.concurrent.duration.FiniteDuration)(f:=>A):s_mach.concurrent.DelayedFuture[A]", "kind" : "def"}, {"label" : "scheduleCancellable", "tail" : "(delay: FiniteDuration, fallback: ⇒ A)(f: ⇒ A): CancellableDelayedFuture[A]", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl.scheduleCancellable", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#scheduleCancellable[A](delay:scala.concurrent.duration.FiniteDuration,fallback:=>A)(f:=>A):s_mach.concurrent.CancellableDelayedFuture[A]", "kind" : "def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: FiniteDuration, period: FiniteDuration, paused: Boolean)(task: () ⇒ U): PeriodicTask", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl.scheduleAtFixedRate", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#scheduleAtFixedRate[U](initialDelay:scala.concurrent.duration.FiniteDuration,period:scala.concurrent.duration.FiniteDuration,paused:Boolean)(task:()=>U):s_mach.concurrent.PeriodicTask", "kind" : "def"}, {"label" : "execute", "tail" : "(runnable: Runnable): Unit", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl.execute", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#execute(runnable:Runnable):Unit", "kind" : "def"}, {"label" : "reportFailure", "tail" : "(cause: Throwable): Unit", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl.reportFailure", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#reportFailure(cause:Throwable):Unit", "kind" : "def"}, {"label" : "activeExecutionCount", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl.activeExecutionCount", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#activeExecutionCount:Int", "kind" : "def"}, {"label" : "_activeExecutionCount", "tail" : ": AtomicInteger", "member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl._activeExecutionCount", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#_activeExecutionCount:java.util.concurrent.atomic.AtomicInteger", "kind" : "val"}, {"member" : "s_mach.concurrent.impl.ConcurrentTestContextImpl#<init>", "error" : "unsupported entity"}, {"label" : "waitForActiveExecutionCount", "tail" : "(_activeRunnableCount: Int): Unit", "member" : "s_mach.concurrent.util.ConcurrentTestContext.waitForActiveExecutionCount", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#waitForActiveExecutionCount(_activeRunnableCount:Int):Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(): ExecutionContext", "member" : "scala.concurrent.ExecutionContext.prepare", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#prepare():scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/impl\/ConcurrentTestContextImpl.html", "kind" : "class"}, {"name" : "s_mach.concurrent.impl.DeferredFutureImpl", "shortDescription" : "", "members_case class" : [{"label" : "delegate", "tail" : ": Future[A]", "member" : "s_mach.concurrent.impl.DeferredFutureImpl.delegate", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#delegate:scala.concurrent.Future[A]", "kind" : "val"}, {"member" : "s_mach.concurrent.impl.DeferredFutureImpl#<init>", "error" : "unsupported entity"}, {"label" : "deferred", "tail" : ": Future[Future[A]]", "member" : "s_mach.concurrent.impl.DeferredFutureImpl.deferred", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#deferred:scala.concurrent.Future[scala.concurrent.Future[A]]", "kind" : "val"}, {"label" : "transformWith", "tail" : "(f: (Try[A]) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "s_mach.concurrent.util.DelegatedFuture.transformWith", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#transformWith[S](f:scala.util.Try[A]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Try[A]) ⇒ Try[S])(executor: ExecutionContext): Future[S]", "member" : "s_mach.concurrent.util.DelegatedFuture.transform", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#transform[S](f:scala.util.Try[A]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "ready", "tail" : "(atMost: Duration)(permit: CanAwait): DeferredFutureImpl.this.type", "member" : "s_mach.concurrent.util.DelegatedFuture.ready", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):DelegatedFuture.this.type", "kind" : "final def"}, {"label" : "result", "tail" : "(atMost: Duration)(permit: CanAwait): A", "member" : "s_mach.concurrent.util.DelegatedFuture.result", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):A", "kind" : "final def"}, {"label" : "value", "tail" : "(): Option[Try[A]]", "member" : "s_mach.concurrent.util.DelegatedFuture.value", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#value:Option[scala.util.Try[A]]", "kind" : "final def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "s_mach.concurrent.util.DelegatedFuture.isCompleted", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#isCompleted:Boolean", "kind" : "final def"}, {"label" : "onComplete", "tail" : "(f: (Try[A]) ⇒ U)(executor: ExecutionContext): Unit", "member" : "s_mach.concurrent.util.DelegatedFuture.onComplete", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#onComplete[U](f:scala.util.Try[A]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "final def"}, {"label" : "isStarted", "tail" : "(): Boolean", "member" : "s_mach.concurrent.DeferredFuture.isStarted", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#isStarted:Boolean", "kind" : "def"}, {"label" : "andThen", "tail" : "(pf: PartialFunction[Try[A], U])(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.andThen", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): Future[S]", "member" : "scala.concurrent.Future.mapTo", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): Future[U]", "member" : "scala.concurrent.Future.fallbackTo", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (A, U) ⇒ R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): Future[(A, U)]", "member" : "scala.concurrent.Future.zip", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#zip[U](that:scala.concurrent.Future[U]):scala.concurrent.Future[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recoverWith", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recover", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.collect", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.withFilter", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (A) ⇒ Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.filter", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#flatten[S](implicitev:<:<[T,scala.concurrent.Future[S]]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.flatMap", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ S)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.map", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (A) ⇒ S, f: (Throwable) ⇒ Throwable)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "failed", "tail" : "(): Future[Throwable]", "member" : "scala.concurrent.Future.failed", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#failed:scala.concurrent.Future[Throwable]", "kind" : "def"}, {"label" : "onFailure", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onFailure", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#onFailure[U](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(pf: PartialFunction[A, U])(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.onSuccess", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#onSuccess[U](pf:PartialFunction[T,U])(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/DeferredFutureImpl.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.DelegatingTaskRunner", "members_trait" : [{"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "taskStepHooks", "tail" : "(): Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "abstract def"}, {"label" : "taskHooks", "tail" : "(): Seq[TaskHook]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "s_mach\/concurrent\/impl\/DelegatingTaskRunner.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.FutureOps", "members_trait" : [{"label" : "onTimeout", "tail" : "(self: Future[A], timeout: FiniteDuration)(fallback: ⇒ Future[A])(ec: ExecutionContext, sec: ScheduledExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.FutureOps.onTimeout", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#onTimeout[A](self:scala.concurrent.Future[A],timeout:scala.concurrent.duration.FiniteDuration)(fallback:=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext,implicitsec:s_mach.concurrent.ScheduledExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "sideEffect", "tail" : "(self: Future[A], sideEffect: ⇒ Unit)(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.FutureOps.sideEffect", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#sideEffect[A](self:scala.concurrent.Future[A],sideEffect:=>Unit)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "happensBefore", "tail" : "(lhs: Future[Any], rhs: ⇒ Future[A])(ec: ExecutionContext): DeferredFuture[A]", "member" : "s_mach.concurrent.impl.FutureOps.happensBefore", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#happensBefore[A](lhs:scala.concurrent.Future[Any],rhs:=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[A]", "kind" : "def"}, {"label" : "nanoSpinDelay", "tail" : "(delay_ns: Long): Long", "member" : "s_mach.concurrent.impl.FutureOps.nanoSpinDelay", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#nanoSpinDelay(delay_ns:Long):Long", "kind" : "def"}, {"label" : "firstSuccess", "tail" : "(xa: Traversable[Future[A]])(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.FutureOps.firstSuccess", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#firstSuccess[A](xa:Traversable[scala.concurrent.Future[A]])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "flatFold", "tail" : "(self: Future[A], onSuccess: (A) ⇒ Future[X], onFailure: (Throwable) ⇒ Future[X])(ec: ExecutionContext): Future[X]", "member" : "s_mach.concurrent.impl.FutureOps.flatFold", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#flatFold[A,X](self:scala.concurrent.Future[A],onSuccess:A=>scala.concurrent.Future[X],onFailure:Throwable=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[X]", "kind" : "def"}, {"label" : "fold", "tail" : "(self: Future[A], onSuccess: (A) ⇒ X, onFailure: (Throwable) ⇒ X)(ec: ExecutionContext): Future[X]", "member" : "s_mach.concurrent.impl.FutureOps.fold", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#fold[A,X](self:scala.concurrent.Future[A],onSuccess:A=>X,onFailure:Throwable=>X)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[X]", "kind" : "def"}, {"label" : "toTry", "tail" : "(self: Future[A])(ec: ExecutionContext): Future[Try[A]]", "member" : "s_mach.concurrent.impl.FutureOps.toTry", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#toTry[A](self:scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[scala.util.Try[A]]", "kind" : "def"}, {"label" : "background", "tail" : "(self: Future[A])(ec: ExecutionContext): Unit", "member" : "s_mach.concurrent.impl.FutureOps.background", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#background[A](self:scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "getTry", "tail" : "(self: Future[A], max: Duration): Try[A]", "member" : "s_mach.concurrent.impl.FutureOps.getTry", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#getTry[A](self:scala.concurrent.Future[A],max:scala.concurrent.duration.Duration):scala.util.Try[A]", "kind" : "def"}, {"label" : "getTry", "tail" : "(self: Future[A]): Try[A]", "member" : "s_mach.concurrent.impl.FutureOps.getTry", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#getTry[A](self:scala.concurrent.Future[A]):scala.util.Try[A]", "kind" : "def"}, {"label" : "get", "tail" : "(self: Future[A], max: Duration): A", "member" : "s_mach.concurrent.impl.FutureOps.get", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#get[A](self:scala.concurrent.Future[A],max:scala.concurrent.duration.Duration):A", "kind" : "def"}, {"label" : "get", "tail" : "(self: Future[A]): A", "member" : "s_mach.concurrent.impl.FutureOps.get", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#get[A](self:scala.concurrent.Future[A]):A", "kind" : "def"}, {"label" : "unit", "tail" : "(): Future[Unit]", "member" : "s_mach.concurrent.impl.FutureOps.unit", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#unit:scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "_unit", "tail" : ": Future[Unit]", "member" : "s_mach.concurrent.impl.FutureOps._unit", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#_unit:scala.concurrent.Future[Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/FutureOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/FutureOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "s_mach\/concurrent\/impl\/FutureOps$.html", "members_object" : [{"label" : "onTimeout", "tail" : "(self: Future[A], timeout: FiniteDuration)(fallback: ⇒ Future[A])(ec: ExecutionContext, sec: ScheduledExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.FutureOps.onTimeout", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#onTimeout[A](self:scala.concurrent.Future[A],timeout:scala.concurrent.duration.FiniteDuration)(fallback:=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext,implicitsec:s_mach.concurrent.ScheduledExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "sideEffect", "tail" : "(self: Future[A], sideEffect: ⇒ Unit)(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.FutureOps.sideEffect", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#sideEffect[A](self:scala.concurrent.Future[A],sideEffect:=>Unit)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "happensBefore", "tail" : "(lhs: Future[Any], rhs: ⇒ Future[A])(ec: ExecutionContext): DeferredFuture[A]", "member" : "s_mach.concurrent.impl.FutureOps.happensBefore", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#happensBefore[A](lhs:scala.concurrent.Future[Any],rhs:=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[A]", "kind" : "def"}, {"label" : "nanoSpinDelay", "tail" : "(delay_ns: Long): Long", "member" : "s_mach.concurrent.impl.FutureOps.nanoSpinDelay", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#nanoSpinDelay(delay_ns:Long):Long", "kind" : "def"}, {"label" : "firstSuccess", "tail" : "(xa: Traversable[Future[A]])(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.FutureOps.firstSuccess", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#firstSuccess[A](xa:Traversable[scala.concurrent.Future[A]])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "flatFold", "tail" : "(self: Future[A], onSuccess: (A) ⇒ Future[X], onFailure: (Throwable) ⇒ Future[X])(ec: ExecutionContext): Future[X]", "member" : "s_mach.concurrent.impl.FutureOps.flatFold", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#flatFold[A,X](self:scala.concurrent.Future[A],onSuccess:A=>scala.concurrent.Future[X],onFailure:Throwable=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[X]", "kind" : "def"}, {"label" : "fold", "tail" : "(self: Future[A], onSuccess: (A) ⇒ X, onFailure: (Throwable) ⇒ X)(ec: ExecutionContext): Future[X]", "member" : "s_mach.concurrent.impl.FutureOps.fold", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#fold[A,X](self:scala.concurrent.Future[A],onSuccess:A=>X,onFailure:Throwable=>X)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[X]", "kind" : "def"}, {"label" : "toTry", "tail" : "(self: Future[A])(ec: ExecutionContext): Future[Try[A]]", "member" : "s_mach.concurrent.impl.FutureOps.toTry", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#toTry[A](self:scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[scala.util.Try[A]]", "kind" : "def"}, {"label" : "background", "tail" : "(self: Future[A])(ec: ExecutionContext): Unit", "member" : "s_mach.concurrent.impl.FutureOps.background", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#background[A](self:scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "getTry", "tail" : "(self: Future[A], max: Duration): Try[A]", "member" : "s_mach.concurrent.impl.FutureOps.getTry", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#getTry[A](self:scala.concurrent.Future[A],max:scala.concurrent.duration.Duration):scala.util.Try[A]", "kind" : "def"}, {"label" : "getTry", "tail" : "(self: Future[A]): Try[A]", "member" : "s_mach.concurrent.impl.FutureOps.getTry", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#getTry[A](self:scala.concurrent.Future[A]):scala.util.Try[A]", "kind" : "def"}, {"label" : "get", "tail" : "(self: Future[A], max: Duration): A", "member" : "s_mach.concurrent.impl.FutureOps.get", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#get[A](self:scala.concurrent.Future[A],max:scala.concurrent.duration.Duration):A", "kind" : "def"}, {"label" : "get", "tail" : "(self: Future[A]): A", "member" : "s_mach.concurrent.impl.FutureOps.get", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#get[A](self:scala.concurrent.Future[A]):A", "kind" : "def"}, {"label" : "unit", "tail" : "(): Future[Unit]", "member" : "s_mach.concurrent.impl.FutureOps.unit", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#unit:scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "_unit", "tail" : ": Future[Unit]", "member" : "s_mach.concurrent.impl.FutureOps._unit", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#_unit:scala.concurrent.Future[Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/FutureOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/impl\/FutureOps.html", "kind" : "object"}, {"name" : "s_mach.concurrent.impl.LatchImpl", "shortDescription" : "", "members_class" : [{"label" : "spinUntilSet", "tail" : "(): Unit", "member" : "s_mach.concurrent.impl.LatchImpl.spinUntilSet", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#spinUntilSet():Unit", "kind" : "def"}, {"label" : "happensBefore", "tail" : "(next: ⇒ Future[A])(ec: ExecutionContext): DeferredFuture[A]", "member" : "s_mach.concurrent.impl.LatchImpl.happensBefore", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#happensBefore[A](next:=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[A]", "kind" : "def"}, {"label" : "onSet", "tail" : "(f: ⇒ A)(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.LatchImpl.onSet", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#onSet[A](f:=>A)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "isSet", "tail" : "(): Boolean", "member" : "s_mach.concurrent.impl.LatchImpl.isSet", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#isSet:Boolean", "kind" : "def"}, {"label" : "trySet", "tail" : "(): Boolean", "member" : "s_mach.concurrent.impl.LatchImpl.trySet", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#trySet():Boolean", "kind" : "def"}, {"label" : "set", "tail" : "(): Unit", "member" : "s_mach.concurrent.impl.LatchImpl.set", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#set():Unit", "kind" : "def"}, {"label" : "future", "tail" : ": Future[Unit]", "member" : "s_mach.concurrent.impl.LatchImpl.future", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#future:scala.concurrent.Future[Unit]", "kind" : "val"}, {"member" : "s_mach.concurrent.impl.LatchImpl#<init>", "error" : "unsupported entity"}, {"label" : "failMessage", "tail" : ": String", "member" : "s_mach.concurrent.impl.LatchImpl.failMessage", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#failMessage:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/LatchImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/impl\/LatchImpl.html", "kind" : "class"}, {"name" : "s_mach.concurrent.impl.ListQueue", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ListQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pollQueueSize", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.Queue.pollQueueSize", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#pollQueueSize:Int", "kind" : "abstract def"}, {"label" : "offerQueueSize", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.Queue.offerQueueSize", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#offerQueueSize:Int", "kind" : "abstract def"}, {"label" : "offer", "tail" : "(xa: TraversableOnce[A]): Unit", "member" : "s_mach.concurrent.impl.Queue.offer", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#offer(xa:TraversableOnce[A]):Unit", "kind" : "abstract def"}, {"label" : "offer", "tail" : "(a: A): Unit", "member" : "s_mach.concurrent.impl.Queue.offer", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#offer(a:A):Unit", "kind" : "abstract def"}, {"label" : "poll", "tail" : "(n: Int)(ec: ExecutionContext): Future[Vector[A]]", "member" : "s_mach.concurrent.impl.Queue.poll", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#poll(n:Int)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Vector[A]]", "kind" : "abstract def"}, {"label" : "poll", "tail" : "()(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.Queue.poll", "link" : "s_mach\/concurrent\/impl\/ListQueue.html#poll()(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "abstract def"}], "shortDescription" : "A trait for queue that uses an unlimited size linked list as the backendfor the queue.", "object" : "s_mach\/concurrent\/impl\/ListQueue$.html", "members_object" : [{"label" : "apply", "tail" : "(elems: A*): ListQueue[A]", "member" : "s_mach.concurrent.impl.ListQueue.apply", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#apply[A](elems:A*):s_mach.concurrent.impl.ListQueue[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ListQueue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/impl\/ListQueue.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.ListQueueImpl", "shortDescription" : "An implementation of ConcurrentQueue using a ListBuffer backendTODO: explore using a true \"concurrent\" back end collection that avoids lockingTODO: (http:\/\/docs.oracle.com\/javase\/8\/docs\/api\/java\/util\/concurrent\/ConcurrentLinkedQueue.html)", "members_class" : [{"label" : "offer", "tail" : "(xa: TraversableOnce[A]): Unit", "member" : "s_mach.concurrent.impl.ListQueueImpl.offer", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#offer(xa:TraversableOnce[A]):Unit", "kind" : "def"}, {"label" : "offer", "tail" : "(a: A): Unit", "member" : "s_mach.concurrent.impl.ListQueueImpl.offer", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#offer(a:A):Unit", "kind" : "def"}, {"label" : "poll", "tail" : "(n: Int)(ec: ExecutionContext): Future[Vector[A]]", "member" : "s_mach.concurrent.impl.ListQueueImpl.poll", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#poll(n:Int)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Vector[A]]", "kind" : "def"}, {"label" : "poll", "tail" : "()(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.ListQueueImpl.poll", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#poll()(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "pollQueueSize", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.ListQueueImpl.pollQueueSize", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#pollQueueSize:Int", "kind" : "def"}, {"label" : "offerQueueSize", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.ListQueueImpl.offerQueueSize", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#offerQueueSize:Int", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.ListQueueImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ListQueueImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/impl\/ListQueueImpl.html", "kind" : "class"}, {"name" : "s_mach.concurrent.impl.LockImpl", "shortDescription" : "The default implementation of Lock using a Semaphore backend", "members_class" : [{"label" : "waitQueueLength", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.LockImpl.waitQueueLength", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#waitQueueLength:Int", "kind" : "def"}, {"label" : "isUnlocked", "tail" : "(): Boolean", "member" : "s_mach.concurrent.impl.LockImpl.isUnlocked", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#isUnlocked:Boolean", "kind" : "def"}, {"label" : "lock", "tail" : "(task: ⇒ Future[X])(ec: ExecutionContext): DeferredFuture[X]", "member" : "s_mach.concurrent.impl.LockImpl.lock", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#lock[X](task:=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[X]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.LockImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/LockImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/LockImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/impl\/LockImpl.html", "kind" : "class"}, {"name" : "s_mach.concurrent.impl.MergeOps", "members_trait" : [{"label" : "flatMerge", "tail" : "(zomFuture: M[Future[N[A]]])(ec: ExecutionContext, cbf1: CanBuildFrom[Nothing, A, M[A]]): Future[M[A]]", "member" : "s_mach.concurrent.impl.MergeOps.flatMerge", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#flatMerge[A,M[+AA]<:Traversable[AA],N[AA]<:TraversableOnce[AA]](zomFuture:M[scala.concurrent.Future[N[A]]])(implicitec:scala.concurrent.ExecutionContext,implicitcbf1:scala.collection.generic.CanBuildFrom[Nothing,A,M[A]]):scala.concurrent.Future[M[A]]", "kind" : "def"}, {"label" : "merge", "tail" : "(zomFuture: M[Future[A]])(ec: ExecutionContext, cbf1: CanBuildFrom[Nothing, A, M[A]]): Future[M[A]]", "member" : "s_mach.concurrent.impl.MergeOps.merge", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#merge[A,M[+AA]<:Traversable[AA]](zomFuture:M[scala.concurrent.Future[A]])(implicitec:scala.concurrent.ExecutionContext,implicitcbf1:scala.collection.generic.CanBuildFrom[Nothing,A,M[A]]):scala.concurrent.Future[M[A]]", "kind" : "def"}, {"label" : "mergeFailImmediately", "tail" : "(p: Promise[A], zomFuture: Traversable[Future[Any]])(ec: ExecutionContext): Unit", "member" : "s_mach.concurrent.impl.MergeOps.mergeFailImmediately", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#mergeFailImmediately[A](p:scala.concurrent.Promise[A],zomFuture:Traversable[scala.concurrent.Future[Any]])(implicitec:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "mergeAllFailures", "tail" : "(zomFuture: M[Future[A]])(ec: ExecutionContext, cbf: CanBuildFrom[M[Future[A]], Throwable, M[Throwable]]): Future[M[Throwable]]", "member" : "s_mach.concurrent.impl.MergeOps.mergeAllFailures", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#mergeAllFailures[A,M[AA]<:TraversableOnce[AA]](zomFuture:M[scala.concurrent.Future[A]])(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[M[scala.concurrent.Future[A]],Throwable,M[Throwable]]):scala.concurrent.Future[M[Throwable]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/MergeOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/MergeOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "s_mach\/concurrent\/impl\/MergeOps$.html", "members_object" : [{"label" : "flatMerge", "tail" : "(zomFuture: M[Future[N[A]]])(ec: ExecutionContext, cbf1: CanBuildFrom[Nothing, A, M[A]]): Future[M[A]]", "member" : "s_mach.concurrent.impl.MergeOps.flatMerge", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#flatMerge[A,M[+AA]<:Traversable[AA],N[AA]<:TraversableOnce[AA]](zomFuture:M[scala.concurrent.Future[N[A]]])(implicitec:scala.concurrent.ExecutionContext,implicitcbf1:scala.collection.generic.CanBuildFrom[Nothing,A,M[A]]):scala.concurrent.Future[M[A]]", "kind" : "def"}, {"label" : "merge", "tail" : "(zomFuture: M[Future[A]])(ec: ExecutionContext, cbf1: CanBuildFrom[Nothing, A, M[A]]): Future[M[A]]", "member" : "s_mach.concurrent.impl.MergeOps.merge", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#merge[A,M[+AA]<:Traversable[AA]](zomFuture:M[scala.concurrent.Future[A]])(implicitec:scala.concurrent.ExecutionContext,implicitcbf1:scala.collection.generic.CanBuildFrom[Nothing,A,M[A]]):scala.concurrent.Future[M[A]]", "kind" : "def"}, {"label" : "mergeFailImmediately", "tail" : "(p: Promise[A], zomFuture: Traversable[Future[Any]])(ec: ExecutionContext): Unit", "member" : "s_mach.concurrent.impl.MergeOps.mergeFailImmediately", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#mergeFailImmediately[A](p:scala.concurrent.Promise[A],zomFuture:Traversable[scala.concurrent.Future[Any]])(implicitec:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "mergeAllFailures", "tail" : "(zomFuture: M[Future[A]])(ec: ExecutionContext, cbf: CanBuildFrom[M[Future[A]], Throwable, M[Throwable]]): Future[M[Throwable]]", "member" : "s_mach.concurrent.impl.MergeOps.mergeAllFailures", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#mergeAllFailures[A,M[AA]<:TraversableOnce[AA]](zomFuture:M[scala.concurrent.Future[A]])(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[M[scala.concurrent.Future[A]],Throwable,M[Throwable]]):scala.concurrent.Future[M[Throwable]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/MergeOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/impl\/MergeOps.html", "kind" : "object"}, {"name" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner", "shortDescription" : "A case class for a parallel asynchronous task runner that is configurablewith optional progress reporting, throttling and\/or failure retry.", "members_case class" : [{"label" : "foreach", "tail" : "(f: (A) ⇒ Future[U])(ec: ExecutionContext): Future[Unit]", "member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner.foreach", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#foreach[U](f:A=>scala.concurrent.Future[U])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Future[TraversableOnce[B]])(cbf: CanBuildFrom[Nothing, B, M[B]], ec: ExecutionContext): Future[M[B]]", "member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner.flatMap", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#flatMap[B](f:A=>scala.concurrent.Future[TraversableOnce[B]])(implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]],implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ Future[B])(cbf: CanBuildFrom[Nothing, B, M[B]], ec: ExecutionContext): Future[M[B]]", "member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner.map", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#map[B](f:A=>scala.concurrent.Future[B])(implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]],implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "using", "tail" : "(optProgress: Option[ProgressConfig], optRetry: Option[RetryConfig], optThrottle: Option[ThrottleConfig]): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner.using", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#using(optProgress:Option[s_mach.concurrent.config.ProgressConfig],optRetry:Option[s_mach.concurrent.config.RetryConfig],optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]):s_mach.concurrent.impl.ParCollectionAsyncTaskRunner[A,M]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "optThrottle", "tail" : ": Option[ThrottleConfig]", "member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner.optThrottle", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]", "kind" : "val"}, {"label" : "optRetry", "tail" : ": Option[RetryConfig]", "member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner.optRetry", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#optRetry:Option[s_mach.concurrent.config.RetryConfig]", "kind" : "val"}, {"label" : "optProgress", "tail" : ": Option[ProgressConfig]", "member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner.optProgress", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#optProgress:Option[s_mach.concurrent.config.ProgressConfig]", "kind" : "val"}, {"label" : "workerCount", "tail" : ": Int", "member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner.workerCount", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#workerCount:Int", "kind" : "val"}, {"label" : "input", "tail" : ": M[A]", "member" : "s_mach.concurrent.impl.ParCollectionAsyncTaskRunner.input", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#input:M[A]", "kind" : "val"}, {"label" : "optTotal", "tail" : "(): Option[Int]", "member" : "s_mach.concurrent.impl.AbstractCollectionAsyncTaskRunner.optTotal", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#optTotal:Option[Int]", "kind" : "def"}, {"label" : "build", "tail" : "(): AsyncConfig", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.build", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#build():s_mach.concurrent.config.AsyncConfig", "kind" : "def"}, {"label" : "throttle_ns", "tail" : "(_throttle_ns: Long)(sec: ScheduledExecutionContext): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.throttle_ns", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#throttle_ns(_throttle_ns:Long)(implicitsec:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retryDecider", "tail" : "(r: RetryDecider)(ec: ExecutionContext): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.retryDecider", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#retryDecider(r:s_mach.concurrent.util.RetryDecider)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(r: TaskEventListener)(ec: ExecutionContext): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.progress", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#progress(r:s_mach.concurrent.util.TaskEventListener)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "using", "tail" : "(cfg: AsyncConfig): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.using", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#using(cfg:s_mach.concurrent.config.AsyncConfig):MDT", "kind" : "def"}, {"label" : "throttle", "tail" : "(_throttle: Duration)(scheduledExecutionContext: ScheduledExecutionContext): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.OptThrottleConfigBuilder.throttle", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#throttle(_throttle:scala.concurrent.duration.Duration)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retry", "tail" : "(f: (List[Throwable]) ⇒ Future[Boolean])(ec: ExecutionContext): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.OptRetryConfigBuilder.retry", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#retry(f:List[Throwable]=>scala.concurrent.Future[Boolean])(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(reportInterval: FiniteDuration)(report: (Progress) ⇒ Unit)(executionContext: ExecutionContext, scheduledExecutionContext: ScheduledExecutionContext): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#progress(reportInterval:scala.concurrent.duration.FiniteDuration)(report:s_mach.concurrent.util.Progress=>Unit)(implicitexecutionContext:scala.concurrent.ExecutionContext,implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(report: (Progress) ⇒ Unit)(ec: ExecutionContext): ParCollectionAsyncTaskRunner[A, M]", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#progress(report:s_mach.concurrent.util.Progress=>Unit)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/ParCollectionAsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl", "shortDescription" : "", "object" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html", "members_class" : [{"label" : "task", "tail" : ": PeriodicTask", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.task", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#task:s_mach.concurrent.PeriodicTask", "kind" : "val"}, {"label" : "onCompleteTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.onCompleteTask", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#onCompleteTask():Unit", "kind" : "def"}, {"label" : "onCompleteStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.onCompleteStep", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#onCompleteStep(sequenceNumber:Int):Unit", "kind" : "def"}, {"label" : "onStartStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.onStartStep", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#onStartStep(sequenceNumber:Int):Unit", "kind" : "def"}, {"label" : "onStartTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.onStartTask", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#onStartTask():Unit", "kind" : "def"}, {"label" : "state", "tail" : ": AtomicFSM[State]", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.state", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#state:s_mach.concurrent.util.AtomicFSM[s_mach.concurrent.impl.PeriodicProgressReporterImpl.State]", "kind" : "val"}, {"member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl#<init>", "error" : "unsupported entity"}, {"label" : "reportInterval", "tail" : ": FiniteDuration", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.reportInterval", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#reportInterval:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Done", "tail" : "", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.Done", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#DoneextendsPeriodicProgressReporterImpl.StatewithProductwithSerializable", "kind" : "case class"}, {"label" : "Running", "tail" : "", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.Running", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#RunningextendsPeriodicProgressReporterImpl.StatewithProductwithSerializable", "kind" : "case class"}, {"label" : "NotStarted", "tail" : "", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.NotStarted", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#NotStarted", "kind" : "object"}, {"label" : "State", "tail" : "", "member" : "s_mach.concurrent.impl.PeriodicProgressReporterImpl.State", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#StateextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/impl\/PeriodicProgressReporterImpl.html", "kind" : "object"}, {"name" : "s_mach.concurrent.impl.ProgressState", "shortDescription" : "", "object" : "s_mach\/concurrent\/impl\/ProgressState$.html", "members_object" : [{"label" : "apply", "tail" : "(cfg: ProgressConfig): ProgressState", "member" : "s_mach.concurrent.impl.ProgressState.apply", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#apply(cfg:s_mach.concurrent.config.ProgressConfig):s_mach.concurrent.impl.ProgressState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ProgressState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "onCompleteStep", "tail" : "(stepId: Int): Unit", "member" : "s_mach.concurrent.impl.ProgressState.onCompleteStep", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#onCompleteStep(stepId:Int):Unit", "kind" : "def"}, {"label" : "onStartStep", "tail" : "(stepId: Int): Unit", "member" : "s_mach.concurrent.impl.ProgressState.onStartStep", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#onStartStep(stepId:Int):Unit", "kind" : "def"}, {"label" : "onCompleteTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.impl.ProgressState.onCompleteTask", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#onCompleteTask():Unit", "kind" : "def"}, {"label" : "onStartTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.impl.ProgressState.onStartTask", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#onStartTask():Unit", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.ProgressState#<init>", "error" : "unsupported entity"}, {"label" : "reporter", "tail" : ": TaskEventListener", "member" : "s_mach.concurrent.impl.ProgressState.reporter", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#reporter:s_mach.concurrent.util.TaskEventListener", "kind" : "val"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskEventListenerHook.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskEventListenerHook.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskEventListenerHook.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[A])(ec: ExecutionContext): () ⇒ Future[A]", "member" : "s_mach.concurrent.impl.TaskEventListenerHook.hookTask", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#hookTask[A](task:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ProgressState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ProgressState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/ProgressState.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Queue", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Queue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Queue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Queue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Queue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Queue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Queue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Queue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Queue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Queue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Queue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Queue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Queue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/Queue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Queue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/Queue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/Queue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Queue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Queue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Queue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pollQueueSize", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.Queue.pollQueueSize", "link" : "s_mach\/concurrent\/impl\/Queue.html#pollQueueSize:Int", "kind" : "abstract def"}, {"label" : "offerQueueSize", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.Queue.offerQueueSize", "link" : "s_mach\/concurrent\/impl\/Queue.html#offerQueueSize:Int", "kind" : "abstract def"}, {"label" : "offer", "tail" : "(xa: TraversableOnce[A]): Unit", "member" : "s_mach.concurrent.impl.Queue.offer", "link" : "s_mach\/concurrent\/impl\/Queue.html#offer(xa:TraversableOnce[A]):Unit", "kind" : "abstract def"}, {"label" : "offer", "tail" : "(a: A): Unit", "member" : "s_mach.concurrent.impl.Queue.offer", "link" : "s_mach\/concurrent\/impl\/Queue.html#offer(a:A):Unit", "kind" : "abstract def"}, {"label" : "poll", "tail" : "(n: Int)(ec: ExecutionContext): Future[Vector[A]]", "member" : "s_mach.concurrent.impl.Queue.poll", "link" : "s_mach\/concurrent\/impl\/Queue.html#poll(n:Int)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Vector[A]]", "kind" : "abstract def"}, {"label" : "poll", "tail" : "()(ec: ExecutionContext): Future[A]", "member" : "s_mach.concurrent.impl.Queue.poll", "link" : "s_mach\/concurrent\/impl\/Queue.html#poll()(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[A]", "kind" : "abstract def"}], "shortDescription" : "A trait for a non-blocking queue.", "trait" : "s_mach\/concurrent\/impl\/Queue.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.RetryState", "shortDescription" : "", "object" : "s_mach\/concurrent\/impl\/RetryState$.html", "members_object" : [{"label" : "apply", "tail" : "(cfg: RetryConfig): RetryState", "member" : "s_mach.concurrent.impl.RetryState.apply", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#apply(cfg:s_mach.concurrent.config.RetryConfig):s_mach.concurrent.impl.RetryState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/RetryState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/RetryState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.RetryState.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/RetryState.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.RetryState.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/RetryState.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.RetryState.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/RetryState.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.RetryState#<init>", "error" : "unsupported entity"}, {"label" : "retryer", "tail" : ": RetryDecider", "member" : "s_mach.concurrent.impl.RetryState.retryer", "link" : "s_mach\/concurrent\/impl\/RetryState.html#retryer:s_mach.concurrent.util.RetryDecider", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/RetryState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/RetryState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/RetryState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/RetryState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/RetryState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/RetryState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/RetryState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/RetryState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/RetryState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/RetryState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/RetryState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/RetryState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/RetryState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/RetryState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/RetryState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/RetryState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/RetryState.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl", "shortDescription" : "", "object" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html", "members_object" : [{"label" : "PeriodicTaskImpl", "tail" : "", "member" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl.PeriodicTaskImpl", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#PeriodicTaskImpl[U]extendsPeriodicTask", "kind" : "class"}, {"label" : "CancellableScheduledDelayedFutureImpl", "tail" : "", "member" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl.CancellableScheduledDelayedFutureImpl", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#CancellableScheduledDelayedFutureImpl[A]extendsScheduledExecutionContextImpl.ScheduledDelayedFutureImpl[A]withCancellableDelayedFuture[A]", "kind" : "class"}, {"label" : "ScheduledDelayedFutureImpl", "tail" : "", "member" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl.ScheduledDelayedFutureImpl", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#ScheduledDelayedFutureImpl[A]extendsDelayedFuture[A]withDelegatedFuture[A]", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "reportFailure", "tail" : "(cause: Throwable): Unit", "member" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl.reportFailure", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#reportFailure(cause:Throwable):Unit", "kind" : "def"}, {"label" : "scheduleAtFixedRate", "tail" : "(initialDelay: FiniteDuration, period: FiniteDuration, paused: Boolean)(task: () ⇒ U): PeriodicTask", "member" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl.scheduleAtFixedRate", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#scheduleAtFixedRate[U](initialDelay:scala.concurrent.duration.FiniteDuration,period:scala.concurrent.duration.FiniteDuration,paused:Boolean)(task:()=>U):s_mach.concurrent.PeriodicTask", "kind" : "def"}, {"label" : "scheduleCancellable", "tail" : "(delay: FiniteDuration, fallback: ⇒ A)(task: ⇒ A): CancellableDelayedFuture[A]", "member" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl.scheduleCancellable", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#scheduleCancellable[A](delay:scala.concurrent.duration.FiniteDuration,fallback:=>A)(task:=>A):s_mach.concurrent.CancellableDelayedFuture[A]", "kind" : "def"}, {"label" : "schedule", "tail" : "(delay: FiniteDuration)(task: ⇒ A): DelayedFuture[A]", "member" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl.schedule", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#schedule[A](delay:scala.concurrent.duration.FiniteDuration)(task:=>A):s_mach.concurrent.DelayedFuture[A]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl#<init>", "error" : "unsupported entity"}, {"label" : "delegate", "tail" : ": ScheduledExecutorService", "member" : "s_mach.concurrent.impl.ScheduledExecutionContextImpl.delegate", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#delegate:java.util.concurrent.ScheduledExecutorService", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/ScheduledExecutionContextImpl.html", "kind" : "object"}, {"name" : "s_mach.concurrent.impl.SemaphoreImpl", "shortDescription" : "The default implementation of Semaphore using a ListBuffer backend.", "members_class" : [{"label" : "acquire", "tail" : "(permitCount: Int)(task: ⇒ Future[X])(ec: ExecutionContext): DeferredFuture[X]", "member" : "s_mach.concurrent.impl.SemaphoreImpl.acquire", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#acquire[X](permitCount:Int)(task:=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[X]", "kind" : "def"}, {"label" : "replenish", "tail" : "(permitCount: Int)(ec: ExecutionContext): Unit", "member" : "s_mach.concurrent.impl.SemaphoreImpl.replenish", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#replenish(permitCount:Int)(implicitec:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(task: ⇒ Future[X], permitCount: Int)(ec: ExecutionContext): Future[X]", "member" : "s_mach.concurrent.impl.SemaphoreImpl.run", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#run[X](task:=>scala.concurrent.Future[X],permitCount:Int)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[X]", "kind" : "def"}, {"label" : "availablePermits", "tail" : "(_availablePermits: Int): Unit", "member" : "s_mach.concurrent.impl.SemaphoreImpl.availablePermits", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#availablePermits(_availablePermits:Int):Unit", "kind" : "def"}, {"label" : "availablePermits", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.SemaphoreImpl.availablePermits", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#availablePermits:Int", "kind" : "def"}, {"label" : "waitQueueLength", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.SemaphoreImpl.waitQueueLength", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#waitQueueLength:Int", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.SemaphoreImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "maxAvailablePermits", "tail" : "(): Int", "member" : "s_mach.concurrent.util.Semaphore.maxAvailablePermits", "link" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html#maxAvailablePermits:Int", "kind" : "abstract def"}], "class" : "s_mach\/concurrent\/impl\/SemaphoreImpl.html", "kind" : "class"}, {"name" : "s_mach.concurrent.impl.SequencerImpl", "shortDescription" : "", "members_class" : [{"label" : "when", "tail" : "(i: Int)(task: ⇒ Future[X])(ec: ExecutionContext): DeferredFuture[X]", "member" : "s_mach.concurrent.impl.SequencerImpl.when", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#when[X](i:Int)(task:=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[X]", "kind" : "def"}, {"label" : "run", "tail" : "(task: ⇒ Future[X])(ec: ExecutionContext): Future[X]", "member" : "s_mach.concurrent.impl.SequencerImpl.run", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#run[X](task:=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[X]", "kind" : "def"}, {"label" : "doNext", "tail" : "()(ec: ExecutionContext): Unit", "member" : "s_mach.concurrent.impl.SequencerImpl.doNext", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#doNext()(implicitec:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "polling", "tail" : ": PriorityQueue[(Int, () ⇒ Unit)]", "member" : "s_mach.concurrent.impl.SequencerImpl.polling", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#polling:scala.collection.mutable.PriorityQueue[(Int,()=>Unit)]", "kind" : "val"}, {"label" : "queOrdering", "tail" : ": Ordering[(Int, Task)]", "member" : "s_mach.concurrent.impl.SequencerImpl.queOrdering", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#queOrdering:Ordering[(Int,SequencerImpl.this.Task)]", "kind" : "val"}, {"label" : "next", "tail" : "(): Int", "member" : "s_mach.concurrent.impl.SequencerImpl.next", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#next:Int", "kind" : "def"}, {"label" : "_next", "tail" : ": Int", "member" : "s_mach.concurrent.impl.SequencerImpl._next", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#_next:Int", "kind" : "var"}, {"label" : "lock", "tail" : ": AnyRef", "member" : "s_mach.concurrent.impl.SequencerImpl.lock", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#lock:Object", "kind" : "val"}, {"label" : "Task", "tail" : "", "member" : "s_mach.concurrent.impl.SequencerImpl.Task", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#Task=()=>Unit", "kind" : "type"}, {"member" : "s_mach.concurrent.impl.SequencerImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/SequencerImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/impl\/SequencerImpl.html", "kind" : "class"}, {"name" : "s_mach.concurrent.impl.SeriallyOps", "members_trait" : [{"label" : "foldLeftSerially", "tail" : "(z: B)(self: M[A], f: (A, B) ⇒ Future[B])(ec: ExecutionContext, cbf: CanBuildFrom[Nothing, B, M[B]]): Future[B]", "member" : "s_mach.concurrent.impl.SeriallyOps.foldLeftSerially", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#foldLeftSerially[A,B,M[AA]<:TraversableOnce[AA]](z:B)(self:M[A],f:(A,B)=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]]):scala.concurrent.Future[B]", "kind" : "def"}, {"label" : "foreachSerially", "tail" : "(self: M[A], f: (A) ⇒ Future[U])(ec: ExecutionContext): Future[Unit]", "member" : "s_mach.concurrent.impl.SeriallyOps.foreachSerially", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#foreachSerially[A,U,M[AA]<:TraversableOnce[AA]](self:M[A],f:A=>scala.concurrent.Future[U])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "flatMapSerially", "tail" : "(self: M[A], f: (A) ⇒ Future[TraversableOnce[B]])(ec: ExecutionContext, cbf: CanBuildFrom[Nothing, B, M[B]]): Future[M[B]]", "member" : "s_mach.concurrent.impl.SeriallyOps.flatMapSerially", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#flatMapSerially[A,B,M[AA]<:TraversableOnce[AA]](self:M[A],f:A=>scala.concurrent.Future[TraversableOnce[B]])(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]]):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "mapSerially", "tail" : "(self: M[A], f: (A) ⇒ Future[B])(ec: ExecutionContext, cbf: CanBuildFrom[Nothing, B, M[B]]): Future[M[B]]", "member" : "s_mach.concurrent.impl.SeriallyOps.mapSerially", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#mapSerially[A,B,M[AA]<:TraversableOnce[AA]](self:M[A],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]]):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/SeriallyOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "s_mach\/concurrent\/impl\/SeriallyOps$.html", "members_object" : [{"label" : "foldLeftSerially", "tail" : "(z: B)(self: M[A], f: (A, B) ⇒ Future[B])(ec: ExecutionContext, cbf: CanBuildFrom[Nothing, B, M[B]]): Future[B]", "member" : "s_mach.concurrent.impl.SeriallyOps.foldLeftSerially", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#foldLeftSerially[A,B,M[AA]<:TraversableOnce[AA]](z:B)(self:M[A],f:(A,B)=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]]):scala.concurrent.Future[B]", "kind" : "def"}, {"label" : "foreachSerially", "tail" : "(self: M[A], f: (A) ⇒ Future[U])(ec: ExecutionContext): Future[Unit]", "member" : "s_mach.concurrent.impl.SeriallyOps.foreachSerially", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#foreachSerially[A,U,M[AA]<:TraversableOnce[AA]](self:M[A],f:A=>scala.concurrent.Future[U])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "flatMapSerially", "tail" : "(self: M[A], f: (A) ⇒ Future[TraversableOnce[B]])(ec: ExecutionContext, cbf: CanBuildFrom[Nothing, B, M[B]]): Future[M[B]]", "member" : "s_mach.concurrent.impl.SeriallyOps.flatMapSerially", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#flatMapSerially[A,B,M[AA]<:TraversableOnce[AA]](self:M[A],f:A=>scala.concurrent.Future[TraversableOnce[B]])(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]]):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "mapSerially", "tail" : "(self: M[A], f: (A) ⇒ Future[B])(ec: ExecutionContext, cbf: CanBuildFrom[Nothing, B, M[B]]): Future[M[B]]", "member" : "s_mach.concurrent.impl.SeriallyOps.mapSerially", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#mapSerially[A,B,M[AA]<:TraversableOnce[AA]](self:M[A],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext,implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]]):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/SeriallyOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/impl\/SeriallyOps.html", "kind" : "object"}, {"name" : "s_mach.concurrent.impl.SimpleProgressReporterImpl", "shortDescription" : "", "members_class" : [{"label" : "onCompleteStep", "tail" : "(stepId: Int): Unit", "member" : "s_mach.concurrent.impl.SimpleProgressReporterImpl.onCompleteStep", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#onCompleteStep(stepId:Int):Unit", "kind" : "def"}, {"label" : "onStartStep", "tail" : "(stepId: Int): Unit", "member" : "s_mach.concurrent.impl.SimpleProgressReporterImpl.onStartStep", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#onStartStep(stepId:Int):Unit", "kind" : "def"}, {"label" : "onCompleteTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.impl.SimpleProgressReporterImpl.onCompleteTask", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#onCompleteTask():Unit", "kind" : "def"}, {"label" : "onStartTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.impl.SimpleProgressReporterImpl.onStartTask", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#onStartTask():Unit", "kind" : "def"}, {"label" : "startTime_ns", "tail" : ": Long", "member" : "s_mach.concurrent.impl.SimpleProgressReporterImpl.startTime_ns", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#startTime_ns:Long", "kind" : "var"}, {"label" : "totalSoFar", "tail" : ": Int", "member" : "s_mach.concurrent.impl.SimpleProgressReporterImpl.totalSoFar", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#totalSoFar:Int", "kind" : "var"}, {"label" : "lock", "tail" : ": AnyRef", "member" : "s_mach.concurrent.impl.SimpleProgressReporterImpl.lock", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#lock:Object", "kind" : "val"}, {"member" : "s_mach.concurrent.impl.SimpleProgressReporterImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/impl\/SimpleProgressReporterImpl.html", "kind" : "class"}, {"name" : "s_mach.concurrent.impl.SimpleRetryDecider", "shortDescription" : "", "members_case class" : [{"label" : "shouldRetry", "tail" : "(taskStepId: Int, failure: Throwable): Future[Boolean]", "member" : "s_mach.concurrent.impl.SimpleRetryDecider.shouldRetry", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#shouldRetry(taskStepId:Int,failure:Throwable):scala.concurrent.Future[Boolean]", "kind" : "def"}, {"label" : "failures", "tail" : ": ConcurrentHashMap[Int, List[Throwable]]", "member" : "s_mach.concurrent.impl.SimpleRetryDecider.failures", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#failures:java.util.concurrent.ConcurrentHashMap[Int,List[Throwable]]", "kind" : "val"}, {"member" : "s_mach.concurrent.impl.SimpleRetryDecider#<init>", "error" : "unsupported entity"}, {"label" : "f", "tail" : ": (List[Throwable]) ⇒ Future[Boolean]", "member" : "s_mach.concurrent.impl.SimpleRetryDecider.f", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#f:List[Throwable]=>scala.concurrent.Future[Boolean]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/SimpleRetryDecider.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig", "members_trait" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S], ft: ⇒ Future[T], fu: ⇒ Future[U], fv: ⇒ Future[V])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S],ft:=>scala.concurrent.Future[T],fu:=>scala.concurrent.Future[U],fv:=>scala.concurrent.Future[V])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S], ft: ⇒ Future[T], fu: ⇒ Future[U])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S],ft:=>scala.concurrent.Future[T],fu:=>scala.concurrent.Future[U])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S], ft: ⇒ Future[T])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S],ft:=>scala.concurrent.Future[T])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K,L](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J,K](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I,J](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H,I](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G,H](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F,G](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F])(ec: ExecutionContext): Future[(A, B, C, D, E, F)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E,F](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E])(ec: ExecutionContext): Future[(A, B, C, D, E)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D,E](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D])(ec: ExecutionContext): Future[(A, B, C, D)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C,D](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C])(ec: ExecutionContext): Future[(A, B, C)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B,C](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C)]", "kind" : "def"}, {"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B])(ec: ExecutionContext): Future[(A, B)]", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.run", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#run[A,B](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B)]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.Any.hashCode", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.equals", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "self", "tail" : "(): AsyncConfig", "member" : "s_mach.concurrent.impl.SMach_Concurrent_AbstractPimpMyAsyncConfig.self", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#self:s_mach.concurrent.config.AsyncConfig", "kind" : "abstract def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.Any.getClass", "link" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html#getClass():Class[_]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "s_mach\/concurrent\/impl\/SMach_Concurrent_AbstractPimpMyAsyncConfig.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.TaskEventListenerHook", "members_trait" : [{"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskEventListenerHook.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskEventListenerHook.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskEventListenerHook.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[A])(ec: ExecutionContext): () ⇒ Future[A]", "member" : "s_mach.concurrent.impl.TaskEventListenerHook.hookTask", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#hookTask[A](task:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onCompleteStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onCompleteStep", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#onCompleteStep(sequenceNumber:Int):Unit", "kind" : "abstract def"}, {"label" : "onStartStep", "tail" : "(sequenceNumber: Int): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onStartStep", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#onStartStep(sequenceNumber:Int):Unit", "kind" : "abstract def"}, {"label" : "onCompleteTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onCompleteTask", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#onCompleteTask():Unit", "kind" : "abstract def"}, {"label" : "onStartTask", "tail" : "(): Unit", "member" : "s_mach.concurrent.util.TaskEventListener.onStartTask", "link" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html#onStartTask():Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "s_mach\/concurrent\/impl\/TaskEventListenerHook.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.TaskHook", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/TaskHook.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskHook.hookTask", "link" : "s_mach\/concurrent\/impl\/TaskHook.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "s_mach\/concurrent\/impl\/TaskHook.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.TaskRunner", "members_trait" : [{"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskStepHook.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "abstract def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskStepHook.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "abstract def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskStepHook.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "abstract def"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskHook.hookTask", "link" : "s_mach\/concurrent\/impl\/TaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "s_mach\/concurrent\/impl\/TaskRunner.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.TaskStepHook", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskStepHook.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "abstract def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskStepHook.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "abstract def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.TaskStepHook.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/TaskStepHook.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "s_mach\/concurrent\/impl\/TaskStepHook.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.impl.ThrottlerImpl", "shortDescription" : "", "members_class" : [{"label" : "run", "tail" : "(f: ⇒ Future[X])(ec: ExecutionContext): DeferredFuture[X]", "member" : "s_mach.concurrent.impl.ThrottlerImpl.run", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#run[X](f:=>scala.concurrent.Future[X])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.DeferredFuture[X]", "kind" : "def"}, {"label" : "adjustThrottle_ns", "tail" : "(adjust_ns: Long): Long", "member" : "s_mach.concurrent.impl.ThrottlerImpl.adjustThrottle_ns", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#adjustThrottle_ns(adjust_ns:Long):Long", "kind" : "def"}, {"label" : "throttle_ns", "tail" : "(throttle_ns: Long): Long", "member" : "s_mach.concurrent.impl.ThrottlerImpl.throttle_ns", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#throttle_ns(throttle_ns:Long):Long", "kind" : "def"}, {"label" : "throttle_ns", "tail" : "(): Long", "member" : "s_mach.concurrent.impl.ThrottlerImpl.throttle_ns", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#throttle_ns:Long", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.ThrottlerImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "s_mach\/concurrent\/impl\/ThrottlerImpl.html", "kind" : "class"}, {"name" : "s_mach.concurrent.impl.ThrottleState", "shortDescription" : "", "object" : "s_mach\/concurrent\/impl\/ThrottleState$.html", "members_object" : [{"label" : "apply", "tail" : "(cfg: ThrottleConfig): ThrottleState", "member" : "s_mach.concurrent.impl.ThrottleState.apply", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#apply(cfg:s_mach.concurrent.config.ThrottleConfig):s_mach.concurrent.impl.ThrottleState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ThrottleState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "hookStepFunction2", "tail" : "(f: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.ThrottleState.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#hookStepFunction2[A,B,R](f:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(f: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.ThrottleState.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#hookStepFunction1[A,R](f:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(f: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.ThrottleState.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#hookStepFunction0[R](f:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "throttler", "tail" : ": Throttler", "member" : "s_mach.concurrent.impl.ThrottleState.throttler", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#throttler:s_mach.concurrent.util.Throttler", "kind" : "val"}, {"member" : "s_mach.concurrent.impl.ThrottleState#<init>", "error" : "unsupported entity"}, {"label" : "throttle_ns", "tail" : ": Long", "member" : "s_mach.concurrent.impl.ThrottleState.throttle_ns", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#throttle_ns:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/ThrottleState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/ThrottleState.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple10AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J)]", "member" : "s_mach.concurrent.impl.Tuple10AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple10AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple10AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple10AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple11AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K)]", "member" : "s_mach.concurrent.impl.Tuple11AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple11AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple11AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple11AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple12AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L)]", "member" : "s_mach.concurrent.impl.Tuple12AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple12AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple12AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple12AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple13AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M)]", "member" : "s_mach.concurrent.impl.Tuple13AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple13AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple13AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple13AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple14AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N)]", "member" : "s_mach.concurrent.impl.Tuple14AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple14AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple14AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple14AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple15AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)]", "member" : "s_mach.concurrent.impl.Tuple15AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple15AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple15AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple15AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple16AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)]", "member" : "s_mach.concurrent.impl.Tuple16AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple16AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple16AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple16AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple17AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q)]", "member" : "s_mach.concurrent.impl.Tuple17AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple17AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple17AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple17AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple18AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R)]", "member" : "s_mach.concurrent.impl.Tuple18AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple18AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple18AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple18AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple19AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S)]", "member" : "s_mach.concurrent.impl.Tuple19AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple19AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple19AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple19AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple20AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S], ft: ⇒ Future[T])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T)]", "member" : "s_mach.concurrent.impl.Tuple20AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S],ft:=>scala.concurrent.Future[T])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple20AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple20AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple20AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple21AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S], ft: ⇒ Future[T], fu: ⇒ Future[U])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U)]", "member" : "s_mach.concurrent.impl.Tuple21AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S],ft:=>scala.concurrent.Future[T],fu:=>scala.concurrent.Future[U])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple21AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple21AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple21AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple22AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I], fj: ⇒ Future[J], fk: ⇒ Future[K], fl: ⇒ Future[L], fm: ⇒ Future[M], fn: ⇒ Future[N], fo: ⇒ Future[O], fp: ⇒ Future[P], fq: ⇒ Future[Q], fr: ⇒ Future[R], fs: ⇒ Future[S], ft: ⇒ Future[T], fu: ⇒ Future[U], fv: ⇒ Future[V])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V)]", "member" : "s_mach.concurrent.impl.Tuple22AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I],fj:=>scala.concurrent.Future[J],fk:=>scala.concurrent.Future[K],fl:=>scala.concurrent.Future[L],fm:=>scala.concurrent.Future[M],fn:=>scala.concurrent.Future[N],fo:=>scala.concurrent.Future[O],fp:=>scala.concurrent.Future[P],fq:=>scala.concurrent.Future[Q],fr:=>scala.concurrent.Future[R],fs:=>scala.concurrent.Future[S],ft:=>scala.concurrent.Future[T],fu:=>scala.concurrent.Future[U],fv:=>scala.concurrent.Future[V])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple22AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple22AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple22AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple2AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B])(ec: ExecutionContext): Future[(A, B)]", "member" : "s_mach.concurrent.impl.Tuple2AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#run[A,B](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple2AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple2AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple2AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple3AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C])(ec: ExecutionContext): Future[(A, B, C)]", "member" : "s_mach.concurrent.impl.Tuple3AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#run[A,B,C](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple3AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple3AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple3AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple4AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D])(ec: ExecutionContext): Future[(A, B, C, D)]", "member" : "s_mach.concurrent.impl.Tuple4AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#run[A,B,C,D](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple4AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple4AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple4AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple5AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E])(ec: ExecutionContext): Future[(A, B, C, D, E)]", "member" : "s_mach.concurrent.impl.Tuple5AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#run[A,B,C,D,E](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple5AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple5AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple5AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple6AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F])(ec: ExecutionContext): Future[(A, B, C, D, E, F)]", "member" : "s_mach.concurrent.impl.Tuple6AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#run[A,B,C,D,E,F](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple6AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple6AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple6AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple7AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G)]", "member" : "s_mach.concurrent.impl.Tuple7AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#run[A,B,C,D,E,F,G](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple7AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple7AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple7AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple8AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H)]", "member" : "s_mach.concurrent.impl.Tuple8AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple8AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple8AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple8AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.Tuple9AsyncTaskRunner", "shortDescription" : "", "members_case class" : [{"label" : "run", "tail" : "(fa: ⇒ Future[A], fb: ⇒ Future[B], fc: ⇒ Future[C], fd: ⇒ Future[D], fe: ⇒ Future[E], ff: ⇒ Future[F], fg: ⇒ Future[G], fh: ⇒ Future[H], fi: ⇒ Future[I])(ec: ExecutionContext): Future[(A, B, C, D, E, F, G, H, I)]", "member" : "s_mach.concurrent.impl.Tuple9AsyncTaskRunner.run", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#run[A,B,C,D,E,F,G,H,I](fa:=>scala.concurrent.Future[A],fb:=>scala.concurrent.Future[B],fc:=>scala.concurrent.Future[C],fd:=>scala.concurrent.Future[D],fe:=>scala.concurrent.Future[E],ff:=>scala.concurrent.Future[F],fg:=>scala.concurrent.Future[G],fh:=>scala.concurrent.Future[H],fi:=>scala.concurrent.Future[I])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[(A,B,C,D,E,F,G,H,I)]", "kind" : "def"}, {"member" : "s_mach.concurrent.impl.Tuple9AsyncTaskRunner#<init>", "error" : "unsupported entity"}, {"label" : "asyncConfig", "tail" : ": AsyncConfig", "member" : "s_mach.concurrent.impl.Tuple9AsyncTaskRunner.asyncConfig", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#asyncConfig:s_mach.concurrent.config.AsyncConfig", "kind" : "val"}, {"label" : "taskStepHooks", "tail" : ": Seq[TaskStepHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskStepHooks", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#taskStepHooks:Seq[s_mach.concurrent.impl.TaskStepHook]", "kind" : "val"}, {"label" : "taskHooks", "tail" : ": Seq[TaskHook]", "member" : "s_mach.concurrent.impl.AbstractAsyncTaskRunner.taskHooks", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#taskHooks:Seq[s_mach.concurrent.impl.TaskHook]", "kind" : "val"}, {"label" : "hookTask", "tail" : "(task: () ⇒ Future[R])(ec: ExecutionContext): () ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookTask", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#hookTask[R](task:()=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):()=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction2", "tail" : "(step: (TaskStepId, A, B) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A, B) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction2", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#hookStepFunction2[A,B,R](step:(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A,B)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction1", "tail" : "(step: (TaskStepId, A) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId, A) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction1", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#hookStepFunction1[A,R](step:(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):(s_mach.concurrent.impl.TaskStepId,A)=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "hookStepFunction0", "tail" : "(step: (TaskStepId) ⇒ Future[R])(ec: ExecutionContext): (TaskStepId) ⇒ Future[R]", "member" : "s_mach.concurrent.impl.DelegatingTaskRunner.hookStepFunction0", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#hookStepFunction0[R](step:s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R])(implicitec:scala.concurrent.ExecutionContext):s_mach.concurrent.impl.TaskStepId=>scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "runTask2", "tail" : "(ma: M[A], runner: (M[A], (A, B) ⇒ Future[C]) ⇒ Future[ZZ], f: (A, B) ⇒ Future[C])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask2", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#runTask2[A,B,C,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],(A,B)=>scala.concurrent.Future[C])=>scala.concurrent.Future[ZZ],f:(A,B)=>scala.concurrent.Future[C])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask1", "tail" : "(ma: M[A], runner: (M[A], (A) ⇒ Future[B]) ⇒ Future[ZZ], f: (A) ⇒ Future[B])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask1", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#runTask1[A,B,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],A=>scala.concurrent.Future[B])=>scala.concurrent.Future[ZZ],f:A=>scala.concurrent.Future[B])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "runTask0", "tail" : "(ma: M[A], runner: (M[A], () ⇒ Future[A]) ⇒ Future[ZZ], f: () ⇒ Future[A])(ec: ExecutionContext): Future[ZZ]", "member" : "s_mach.concurrent.impl.TaskRunner.runTask0", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#runTask0[A,M[AA]<:TraversableOnce[AA],ZZ](ma:M[A],runner:(M[A],()=>scala.concurrent.Future[A])=>scala.concurrent.Future[ZZ],f:()=>scala.concurrent.Future[A])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[ZZ]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/impl\/Tuple9AsyncTaskRunner.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.impl.WorkersOps", "shortDescription" : "", "object" : "s_mach\/concurrent\/impl\/WorkersOps$.html", "members_object" : [{"label" : "runWorkers", "tail" : "(workerCount: Int)(xa: TraversableOnce[A], f: (A) ⇒ Future[B], g: (B) ⇒ Future[Unit])(ec: ExecutionContext): Future[Unit]", "member" : "s_mach.concurrent.impl.WorkersOps.runWorkers", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#runWorkers[A,B](workerCount:Int)(xa:TraversableOnce[A],f:A=>scala.concurrent.Future[B],g:B=>scala.concurrent.Future[Unit])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "foreachWorkers", "tail" : "(workerCount: Int)(self: M[A], f: (A) ⇒ Future[U])(ec: ExecutionContext): Future[Unit]", "member" : "s_mach.concurrent.impl.WorkersOps.foreachWorkers", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#foreachWorkers[A,U,M[+AA]<:TraversableOnce[AA]](workerCount:Int)(self:M[A],f:A=>scala.concurrent.Future[U])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "flatMapWorkers", "tail" : "(workerCount: Int)(self: M[A], f: (A) ⇒ Future[TraversableOnce[B]])(cbf: CanBuildFrom[Nothing, B, M[B]], ec: ExecutionContext): Future[M[B]]", "member" : "s_mach.concurrent.impl.WorkersOps.flatMapWorkers", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#flatMapWorkers[A,B,M[+AA]<:TraversableOnce[AA]](workerCount:Int)(self:M[A],f:A=>scala.concurrent.Future[TraversableOnce[B]])(implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]],implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "mapWorkers", "tail" : "(workerCount: Int)(self: M[A], f: (A) ⇒ Future[B])(cbf: CanBuildFrom[Nothing, B, M[B]], ec: ExecutionContext): Future[M[B]]", "member" : "s_mach.concurrent.impl.WorkersOps.mapWorkers", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#mapWorkers[A,B,M[+AA]<:TraversableOnce[AA]](workerCount:Int)(self:M[A],f:A=>scala.concurrent.Future[B])(implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,B,M[B]],implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[M[B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/impl\/WorkersOps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "s_mach.concurrent.config" : [{"name" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder", "members_trait" : [{"label" : "build", "tail" : "(): AsyncConfig", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.build", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#build():s_mach.concurrent.config.AsyncConfig", "kind" : "def"}, {"label" : "throttle_ns", "tail" : "(_throttle_ns: Long)(sec: ScheduledExecutionContext): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.throttle_ns", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#throttle_ns(_throttle_ns:Long)(implicitsec:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retryDecider", "tail" : "(r: RetryDecider)(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.retryDecider", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#retryDecider(r:s_mach.concurrent.util.RetryDecider)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(r: TaskEventListener)(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.progress", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#progress(r:s_mach.concurrent.util.TaskEventListener)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "using", "tail" : "(cfg: AsyncConfig): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.using", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#using(cfg:s_mach.concurrent.config.AsyncConfig):MDT", "kind" : "def"}, {"label" : "throttle", "tail" : "(_throttle: Duration)(scheduledExecutionContext: ScheduledExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptThrottleConfigBuilder.throttle", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#throttle(_throttle:scala.concurrent.duration.Duration)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retry", "tail" : "(f: (List[Throwable]) ⇒ Future[Boolean])(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptRetryConfigBuilder.retry", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#retry(f:List[Throwable]=>scala.concurrent.Future[Boolean])(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(reportInterval: FiniteDuration)(report: (Progress) ⇒ Unit)(executionContext: ExecutionContext, scheduledExecutionContext: ScheduledExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#progress(reportInterval:scala.concurrent.duration.FiniteDuration)(report:s_mach.concurrent.util.Progress=>Unit)(implicitexecutionContext:scala.concurrent.ExecutionContext,implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(report: (Progress) ⇒ Unit)(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#progress(report:s_mach.concurrent.util.Progress=>Unit)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "using", "tail" : "(optProgress: Option[ProgressConfig], optRetry: Option[RetryConfig], optThrottle: Option[ThrottleConfig]): MDT", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.using", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#using(optProgress:Option[s_mach.concurrent.config.ProgressConfig],optRetry:Option[s_mach.concurrent.config.RetryConfig],optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]):MDT", "kind" : "abstract def"}, {"label" : "workerCount", "tail" : "(): Int", "member" : "s_mach.concurrent.config.AsyncConfig.workerCount", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#workerCount:Int", "kind" : "abstract def"}, {"label" : "optThrottle", "tail" : "(): Option[ThrottleConfig]", "member" : "s_mach.concurrent.config.OptThrottleConfig.optThrottle", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]", "kind" : "abstract def"}, {"label" : "optRetry", "tail" : "(): Option[RetryConfig]", "member" : "s_mach.concurrent.config.OptRetryConfig.optRetry", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#optRetry:Option[s_mach.concurrent.config.RetryConfig]", "kind" : "abstract def"}, {"label" : "optProgress", "tail" : "(): Option[ProgressConfig]", "member" : "s_mach.concurrent.config.OptProgressConfig.optProgress", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#optProgress:Option[s_mach.concurrent.config.ProgressConfig]", "kind" : "abstract def"}, {"label" : "optTotal", "tail" : "(): Option[Int]", "member" : "s_mach.concurrent.config.OptProgressConfig.optTotal", "link" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html#optTotal:Option[Int]", "kind" : "abstract def"}], "shortDescription" : "A base trait for an immutable AsyncConfig builder that allows configuringoptional progress reporting, failure retry and throttling.", "trait" : "s_mach\/concurrent\/config\/AbstractAsyncConfigBuilder.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.AsyncConfig", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "workerCount", "tail" : "(): Int", "member" : "s_mach.concurrent.config.AsyncConfig.workerCount", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#workerCount:Int", "kind" : "abstract def"}, {"label" : "optThrottle", "tail" : "(): Option[ThrottleConfig]", "member" : "s_mach.concurrent.config.OptThrottleConfig.optThrottle", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]", "kind" : "abstract def"}, {"label" : "optRetry", "tail" : "(): Option[RetryConfig]", "member" : "s_mach.concurrent.config.OptRetryConfig.optRetry", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#optRetry:Option[s_mach.concurrent.config.RetryConfig]", "kind" : "abstract def"}, {"label" : "optProgress", "tail" : "(): Option[ProgressConfig]", "member" : "s_mach.concurrent.config.OptProgressConfig.optProgress", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#optProgress:Option[s_mach.concurrent.config.ProgressConfig]", "kind" : "abstract def"}, {"label" : "optTotal", "tail" : "(): Option[Int]", "member" : "s_mach.concurrent.config.OptProgressConfig.optTotal", "link" : "s_mach\/concurrent\/config\/AsyncConfig.html#optTotal:Option[Int]", "kind" : "abstract def"}], "shortDescription" : "A trait for an asynchronous task configuration that allows configuringthe number of parallel workers used to process the task, optional progressreporting, failure retry and throttling.", "object" : "s_mach\/concurrent\/config\/AsyncConfig$.html", "members_object" : [{"label" : "apply", "tail" : "(cfg: AsyncConfig): AsyncConfig", "member" : "s_mach.concurrent.config.AsyncConfig.apply", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#apply(cfg:s_mach.concurrent.config.AsyncConfig):s_mach.concurrent.config.AsyncConfig", "kind" : "def"}, {"label" : "apply", "tail" : "(workerCount: Int, optProgress: Option[ProgressConfig], optRetry: Option[RetryConfig], optThrottle: Option[ThrottleConfig]): AsyncConfig", "member" : "s_mach.concurrent.config.AsyncConfig.apply", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#apply(workerCount:Int,optProgress:Option[s_mach.concurrent.config.ProgressConfig],optRetry:Option[s_mach.concurrent.config.RetryConfig],optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]):s_mach.concurrent.config.AsyncConfig", "kind" : "def"}, {"label" : "AsyncConfigImpl", "tail" : "", "member" : "s_mach.concurrent.config.AsyncConfig.AsyncConfigImpl", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#AsyncConfigImplextendsAsyncConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "DEFAULT_PAR_WORKER_COUNT", "tail" : ": Int", "member" : "s_mach.concurrent.config.AsyncConfig.DEFAULT_PAR_WORKER_COUNT", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#DEFAULT_PAR_WORKER_COUNT:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/AsyncConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/config\/AsyncConfig.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.AsyncConfigBuilder", "shortDescription" : "A case class for an immutable AsyncConfig builder", "members_case class" : [{"label" : "par", "tail" : "(workerCount: Int): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.AsyncConfigBuilder.par", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#par(workerCount:Int):s_mach.concurrent.config.AsyncConfigBuilder", "kind" : "def"}, {"label" : "par", "tail" : "(): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.AsyncConfigBuilder.par", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#par:s_mach.concurrent.config.AsyncConfigBuilder", "kind" : "def"}, {"label" : "optTotal", "tail" : ": None.type", "member" : "s_mach.concurrent.config.AsyncConfigBuilder.optTotal", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#optTotal:None.type", "kind" : "val"}, {"label" : "using", "tail" : "(optProgress: Option[ProgressConfig], optRetry: Option[RetryConfig], optThrottle: Option[ThrottleConfig]): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.AsyncConfigBuilder.using", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#using(optProgress:Option[s_mach.concurrent.config.ProgressConfig],optRetry:Option[s_mach.concurrent.config.RetryConfig],optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]):s_mach.concurrent.config.AsyncConfigBuilder", "kind" : "def"}, {"member" : "s_mach.concurrent.config.AsyncConfigBuilder#<init>", "error" : "unsupported entity"}, {"label" : "optThrottle", "tail" : ": Option[ThrottleConfig]", "member" : "s_mach.concurrent.config.AsyncConfigBuilder.optThrottle", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]", "kind" : "val"}, {"label" : "optRetry", "tail" : ": Option[RetryConfig]", "member" : "s_mach.concurrent.config.AsyncConfigBuilder.optRetry", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#optRetry:Option[s_mach.concurrent.config.RetryConfig]", "kind" : "val"}, {"label" : "optProgress", "tail" : ": Option[ProgressConfig]", "member" : "s_mach.concurrent.config.AsyncConfigBuilder.optProgress", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#optProgress:Option[s_mach.concurrent.config.ProgressConfig]", "kind" : "val"}, {"label" : "workerCount", "tail" : ": Int", "member" : "s_mach.concurrent.config.AsyncConfigBuilder.workerCount", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#workerCount:Int", "kind" : "val"}, {"label" : "build", "tail" : "(): AsyncConfig", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.build", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#build():s_mach.concurrent.config.AsyncConfig", "kind" : "def"}, {"label" : "throttle_ns", "tail" : "(_throttle_ns: Long)(sec: ScheduledExecutionContext): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.throttle_ns", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#throttle_ns(_throttle_ns:Long)(implicitsec:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retryDecider", "tail" : "(r: RetryDecider)(ec: ExecutionContext): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.retryDecider", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#retryDecider(r:s_mach.concurrent.util.RetryDecider)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(r: TaskEventListener)(ec: ExecutionContext): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.progress", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#progress(r:s_mach.concurrent.util.TaskEventListener)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "using", "tail" : "(cfg: AsyncConfig): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.AbstractAsyncConfigBuilder.using", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#using(cfg:s_mach.concurrent.config.AsyncConfig):MDT", "kind" : "def"}, {"label" : "throttle", "tail" : "(_throttle: Duration)(scheduledExecutionContext: ScheduledExecutionContext): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.OptThrottleConfigBuilder.throttle", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#throttle(_throttle:scala.concurrent.duration.Duration)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "retry", "tail" : "(f: (List[Throwable]) ⇒ Future[Boolean])(ec: ExecutionContext): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.OptRetryConfigBuilder.retry", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#retry(f:List[Throwable]=>scala.concurrent.Future[Boolean])(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(reportInterval: FiniteDuration)(report: (Progress) ⇒ Unit)(executionContext: ExecutionContext, scheduledExecutionContext: ScheduledExecutionContext): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#progress(reportInterval:scala.concurrent.duration.FiniteDuration)(report:s_mach.concurrent.util.Progress=>Unit)(implicitexecutionContext:scala.concurrent.ExecutionContext,implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(report: (Progress) ⇒ Unit)(ec: ExecutionContext): AsyncConfigBuilder", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#progress(report:s_mach.concurrent.util.Progress=>Unit)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "s_mach\/concurrent\/config\/AsyncConfigBuilder.html", "kind" : "case class"}, {"name" : "s_mach.concurrent.config.OptProgressConfig", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "optProgress", "tail" : "(): Option[ProgressConfig]", "member" : "s_mach.concurrent.config.OptProgressConfig.optProgress", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#optProgress:Option[s_mach.concurrent.config.ProgressConfig]", "kind" : "abstract def"}, {"label" : "optTotal", "tail" : "(): Option[Int]", "member" : "s_mach.concurrent.config.OptProgressConfig.optTotal", "link" : "s_mach\/concurrent\/config\/OptProgressConfig.html#optTotal:Option[Int]", "kind" : "abstract def"}], "shortDescription" : "A trait for configuring optional progress reporting", "trait" : "s_mach\/concurrent\/config\/OptProgressConfig.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.OptProgressConfigBuilder", "members_trait" : [{"label" : "progress", "tail" : "(reportInterval: FiniteDuration)(report: (Progress) ⇒ Unit)(executionContext: ExecutionContext, scheduledExecutionContext: ScheduledExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#progress(reportInterval:scala.concurrent.duration.FiniteDuration)(report:s_mach.concurrent.util.Progress=>Unit)(implicitexecutionContext:scala.concurrent.ExecutionContext,implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "progress", "tail" : "(report: (Progress) ⇒ Unit)(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#progress(report:s_mach.concurrent.util.Progress=>Unit)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "build", "tail" : "(): OptProgressConfig", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.build", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#build():s_mach.concurrent.config.OptProgressConfig", "kind" : "abstract def"}, {"label" : "progress", "tail" : "(reporter: TaskEventListener)(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.progress", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#progress(reporter:s_mach.concurrent.util.TaskEventListener)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "abstract def"}, {"label" : "optTotal", "tail" : "(): Option[Int]", "member" : "s_mach.concurrent.config.OptProgressConfigBuilder.optTotal", "link" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html#optTotal:Option[Int]", "kind" : "abstract def"}], "shortDescription" : "A trait for an immutable builder of OptProgressConfig.", "trait" : "s_mach\/concurrent\/config\/OptProgressConfigBuilder.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.OptRetryConfig", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "optRetry", "tail" : "(): Option[RetryConfig]", "member" : "s_mach.concurrent.config.OptRetryConfig.optRetry", "link" : "s_mach\/concurrent\/config\/OptRetryConfig.html#optRetry:Option[s_mach.concurrent.config.RetryConfig]", "kind" : "abstract def"}], "shortDescription" : "A trait for configuring optional failure retry", "trait" : "s_mach\/concurrent\/config\/OptRetryConfig.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.OptRetryConfigBuilder", "members_trait" : [{"label" : "retry", "tail" : "(f: (List[Throwable]) ⇒ Future[Boolean])(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptRetryConfigBuilder.retry", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#retry(f:List[Throwable]=>scala.concurrent.Future[Boolean])(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "build", "tail" : "(): OptRetryConfig", "member" : "s_mach.concurrent.config.OptRetryConfigBuilder.build", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#build():s_mach.concurrent.config.OptRetryConfig", "kind" : "abstract def"}, {"label" : "retryDecider", "tail" : "(decider: RetryDecider)(ec: ExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptRetryConfigBuilder.retryDecider", "link" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html#retryDecider(decider:s_mach.concurrent.util.RetryDecider)(implicitec:scala.concurrent.ExecutionContext):MDT", "kind" : "abstract def"}], "shortDescription" : "A trait for an immutable builder of OptRetryConfig.", "trait" : "s_mach\/concurrent\/config\/OptRetryConfigBuilder.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.OptThrottleConfig", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "optThrottle", "tail" : "(): Option[ThrottleConfig]", "member" : "s_mach.concurrent.config.OptThrottleConfig.optThrottle", "link" : "s_mach\/concurrent\/config\/OptThrottleConfig.html#optThrottle:Option[s_mach.concurrent.config.ThrottleConfig]", "kind" : "abstract def"}], "shortDescription" : "A trait for configuring optional throttling", "trait" : "s_mach\/concurrent\/config\/OptThrottleConfig.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.OptThrottleConfigBuilder", "members_trait" : [{"label" : "throttle", "tail" : "(_throttle: Duration)(scheduledExecutionContext: ScheduledExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptThrottleConfigBuilder.throttle", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#throttle(_throttle:scala.concurrent.duration.Duration)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "build", "tail" : "(): OptThrottleConfig", "member" : "s_mach.concurrent.config.OptThrottleConfigBuilder.build", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#build():s_mach.concurrent.config.OptThrottleConfig", "kind" : "abstract def"}, {"label" : "throttle_ns", "tail" : "(_throttle_ns: Long)(scheduledExecutionContext: ScheduledExecutionContext): MDT", "member" : "s_mach.concurrent.config.OptThrottleConfigBuilder.throttle_ns", "link" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html#throttle_ns(_throttle_ns:Long)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):MDT", "kind" : "abstract def"}], "shortDescription" : "A trait for an immutable builder of OptThrottleConfig.", "trait" : "s_mach\/concurrent\/config\/OptThrottleConfigBuilder.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.ProgressConfig", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reporter", "tail" : "(): TaskEventListener", "member" : "s_mach.concurrent.config.ProgressConfig.reporter", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#reporter:s_mach.concurrent.util.TaskEventListener", "kind" : "abstract def"}, {"label" : "executionContext", "tail" : "(): ExecutionContext", "member" : "s_mach.concurrent.config.ProgressConfig.executionContext", "link" : "s_mach\/concurrent\/config\/ProgressConfig.html#executionContext:scala.concurrent.ExecutionContext", "kind" : "implicit abstract def"}], "shortDescription" : "A trait that configures progress reporting", "object" : "s_mach\/concurrent\/config\/ProgressConfig$.html", "members_object" : [{"label" : "apply", "tail" : "(optTotal: Option[Int], reporter: TaskEventListener)(executionContext: ExecutionContext): ProgressConfig", "member" : "s_mach.concurrent.config.ProgressConfig.apply", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#apply(optTotal:Option[Int],reporter:s_mach.concurrent.util.TaskEventListener)(implicitexecutionContext:scala.concurrent.ExecutionContext):s_mach.concurrent.config.ProgressConfig", "kind" : "def"}, {"label" : "ProgressConfigImpl", "tail" : "", "member" : "s_mach.concurrent.config.ProgressConfig.ProgressConfigImpl", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#ProgressConfigImplextendsProgressConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/ProgressConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/config\/ProgressConfig.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.RetryConfig", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/RetryConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "retryer", "tail" : "(): RetryDecider", "member" : "s_mach.concurrent.config.RetryConfig.retryer", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#retryer:s_mach.concurrent.util.RetryDecider", "kind" : "abstract def"}, {"label" : "executionContext", "tail" : "(): ExecutionContext", "member" : "s_mach.concurrent.config.RetryConfig.executionContext", "link" : "s_mach\/concurrent\/config\/RetryConfig.html#executionContext:scala.concurrent.ExecutionContext", "kind" : "implicit abstract def"}], "shortDescription" : "A trait that configures failure retry", "object" : "s_mach\/concurrent\/config\/RetryConfig$.html", "members_object" : [{"label" : "apply", "tail" : "(retryer: RetryDecider)(executionContext: ExecutionContext): RetryConfig", "member" : "s_mach.concurrent.config.RetryConfig.apply", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#apply(retryer:s_mach.concurrent.util.RetryDecider)(implicitexecutionContext:scala.concurrent.ExecutionContext):s_mach.concurrent.config.RetryConfig", "kind" : "def"}, {"label" : "RetryConfigImpl", "tail" : "", "member" : "s_mach.concurrent.config.RetryConfig.RetryConfigImpl", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#RetryConfigImplextendsRetryConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/RetryConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/config\/RetryConfig.html", "kind" : "trait"}, {"name" : "s_mach.concurrent.config.ThrottleConfig", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "throttle_ns", "tail" : "(): Long", "member" : "s_mach.concurrent.config.ThrottleConfig.throttle_ns", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#throttle_ns:Long", "kind" : "abstract def"}, {"label" : "scheduledExecutionContext", "tail" : "(): ScheduledExecutionContext", "member" : "s_mach.concurrent.config.ThrottleConfig.scheduledExecutionContext", "link" : "s_mach\/concurrent\/config\/ThrottleConfig.html#scheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext", "kind" : "abstract def"}], "shortDescription" : "A trait for configuring throttling", "object" : "s_mach\/concurrent\/config\/ThrottleConfig$.html", "members_object" : [{"label" : "apply", "tail" : "(throttle_ns: Long)(scheduledExecutionContext: ScheduledExecutionContext): ThrottleConfig", "member" : "s_mach.concurrent.config.ThrottleConfig.apply", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#apply(throttle_ns:Long)(implicitscheduledExecutionContext:s_mach.concurrent.ScheduledExecutionContext):s_mach.concurrent.config.ThrottleConfig", "kind" : "def"}, {"label" : "ThrottleConfigImpl", "tail" : "", "member" : "s_mach.concurrent.config.ThrottleConfig.ThrottleConfigImpl", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#ThrottleConfigImplextendsThrottleConfigwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "s_mach\/concurrent\/config\/ThrottleConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "s_mach\/concurrent\/config\/ThrottleConfig.html", "kind" : "trait"}]};